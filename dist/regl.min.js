(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.regl=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(_dereq_,module,exports){var glTypes=_dereq_("./constants/dtypes.json");var GL_FLOAT=5126;function AttributeRecord(){this.pointer=false;this.x=0;this.y=0;this.z=0;this.w=0;this.buffer=null;this.size=0;this.normalized=false;this.type=GL_FLOAT;this.offset=0;this.stride=0;this.divisor=0}Object.assign(AttributeRecord.prototype,{equals:function(other,size){if(!this.pointer){return!other.pointer&&this.x===other.x&&this.y===other.y&&this.z===other.z&&this.w===other.w}else{return other.pointer&&this.buffer===other.buffer&&this.size===size&&this.normalized===other.normalized&&this.type===other.type&&this.offset===other.offset&&this.stride===other.stride&&this.divisor===other.divisor}},set:function(other,size){var pointer=this.pointer=other.pointer;if(pointer){this.buffer=other.buffer;this.size=size;this.normalized=other.normalized;this.type=other.type;this.offset=other.offset;this.stride=other.stride;this.divisor=other.divisor}else{this.x=other.x;this.y=other.y;this.z=other.z;this.w=other.w}}});module.exports=function wrapAttributeState(gl,extensionState,bufferState){var extensions=extensionState.extensions;var attributeState={};var NUM_ATTRIBUTES=gl.getParameter(gl.MAX_VERTEX_ATTRIBS);var attributeBindings=new Array(NUM_ATTRIBUTES);for(var i=0;i<NUM_ATTRIBUTES;++i){attributeBindings[i]=new AttributeRecord}function AttributeStack(){var records=new Array(16);for(var i=0;i<16;++i){records[i]=new AttributeRecord}this.records=records;this.top=0}function pushAttributeStack(stack){var records=stack.records;var top=stack.top;while(records.length-1<=top){records.push(new AttributeRecord)}return records[++stack.top]}Object.assign(AttributeStack.prototype,{pushVec:function(x,y,z,w){var head=pushAttributeStack(this);head.pointer=false;head.x=x;head.y=y;head.z=z;head.w=w},pushPtr:function(buffer,size,offset,stride,divisor,normalized,type){var head=pushAttributeStack(this);head.pointer=true;head.buffer=buffer;head.size=size;head.offset=offset;head.stride=stride;head.divisor=divisor;head.normalized=normalized;head.type=type},pushDyn:function(data){if(typeof data==="number"){this.pushVec(data,0,0,0)}else if(Array.isArray(data)){this.pushVec(data[0],data[1],data[2],data[3])}else{var buffer=bufferState.getBuffer(data);var size=0;var stride=0;var offset=0;var divisor=0;var normalized=false;var type=GL_FLOAT;if(!buffer){buffer=bufferState.getBuffer(data.buffer);size=data.size||0;stride=data.stride||0;offset=data.offset||0;divisor=data.divisor||0;normalized=data.normalized||false;type=buffer.dtype;if("type"in data){type=glTypes[data.type]}}else{type=buffer.dtype}this.pushPtr(buffer,size,offset,stride,divisor,normalized,type)}},pop:function(){this.top-=1}});function bindAttribute(index,current,next,size){size=next.size||size;if(current.equals(next,size)){return}if(!next.pointer){if(current.pointer){gl.disableVertexAttribArray(index)}gl.vertexAttrib4f(index,next.x,next.y,next.z,next.w)}else{if(!current.pointer){gl.enableVertexAttribArray(index)}if(current.buffer!==next.buffer){next.buffer.bind()}gl.vertexAttribPointer(index,size,next.type,next.normalized,next.stride,next.offset);var extInstancing=extensions.angle_instanced_arrays;if(extInstancing){extInstancing.vertexAttribDivisorANGLE(index,next.divisor)}}current.set(next,size)}function defAttribute(name){if(name in attributeState){return}attributeState[name]=new AttributeStack}return{bindings:attributeBindings,attributes:attributeState,bind:bindAttribute,def:defAttribute}}},{"./constants/dtypes.json":8}],2:[function(_dereq_,module,exports){var check=_dereq_("./check");var isTypedArray=_dereq_("./is-typed-array");var arrayTypes=_dereq_("./constants/arraytypes.json");var GL_UNSIGNED_BYTE=5121;var GL_STATIC_DRAW=35044;var GL_FLOAT=5126;var usageTypes={"static":35044,dynamic:35048,stream:35040};function flatten(data,dimension){var result=new Float32Array(data.length*dimension);var ptr=0;for(var i=0;i<data.length;++i){var v=data[i];for(var j=0;j<dimension;++j){result[ptr++]=v[j]}}return result}module.exports=function wrapBufferState(gl){var bufferCount=0;var bufferSet={};function REGLBuffer(buffer,type){this.id=bufferCount++;this.buffer=buffer;this.type=type;this.usage=GL_STATIC_DRAW;this.byteLength=0;this.dimension=1;this.data=null;this.dtype=GL_UNSIGNED_BYTE}Object.assign(REGLBuffer.prototype,{bind:function(){gl.bindBuffer(this.type,this.buffer)},update:function(options){if(Array.isArray(options)||isTypedArray(options)){options={data:options}}else if(typeof options==="number"){options={length:options|0}}else if(options===null||options===void 0){options={}}check.type(options,"object","buffer arguments must be an object, a number or an array");if("usage"in options){var usage=options.usage;check.parameter(usage,usageTypes,"buffer usage");this.usage=usageTypes[options.usage]}var dimension=options.dimension|0||1;if("data"in options){var data=options.data;if(data===null){this.byteLength=options.length|0;this.dtype=GL_UNSIGNED_BYTE}else{if(Array.isArray(data)){if(data.length>0&&Array.isArray(data[0])){dimension=data[0].length;data=flatten(data,dimension);this.dtype=GL_FLOAT}else{data=new Float32Array(data);this.dtype=GL_FLOAT}}else{check.isTypedArray(data,"invalid data type buffer data");this.dtype=arrayTypes[Object.prototype.toString.call(data)]}this.dimension=dimension;this.byteLength=data.byteLength}this.data=data}else if("length"in options){var byteLength=options.length;check.nni(byteLength,"buffer length must be a nonnegative integer");this.data=null;this.byteLength=options.length|0;this.dtype=GL_UNSIGNED_BYTE}this.bind();gl.bufferData(this.type,this.data||this.byteLength,this.usage)},refresh:function(){if(!gl.isBuffer(this.buffer)){this.buffer=gl.createBuffer()}this.update({})},destroy:function(){check(this.buffer,"buffer must not be deleted already");gl.deleteBuffer(this.buffer);this.buffer=null;delete bufferSet[this.id]}});function createBuffer(options,type){options=options||{};var handle=gl.createBuffer();var buffer=new REGLBuffer(handle,type);buffer.update(options);bufferSet[buffer.id]=buffer;function reglBuffer(options){buffer.update(options||{});return reglBuffer}reglBuffer._reglType="buffer";reglBuffer._buffer=buffer;reglBuffer.destroy=function(){buffer.destroy()};return reglBuffer}return{create:createBuffer,clear:function(){Object.keys(bufferSet).forEach(function(bufferId){bufferSet[bufferId].destroy()})},refresh:function(){Object.keys(bufferSet).forEach(function(bufferId){bufferSet[bufferId].refresh()})},getBuffer:function(wrapper){if(wrapper&&wrapper._buffer instanceof REGLBuffer){return wrapper._buffer}return null}}}},{"./check":3,"./constants/arraytypes.json":7,"./is-typed-array":16}],3:[function(_dereq_,module,exports){var isTypedArray=_dereq_("./is-typed-array");function raise(message){console.error(message);throw new Error(message)}function check(pred,message){if(!pred){raise(message)}}function encolon(message){if(message){return": "+message}return""}function checkParameter(param,possibilities,message){check(param in possibilities,"unknown parameter ("+param+")"+encolon(message)+". possible values: "+Object.keys(possibilities).join())}function checkIsTypedArray(data,message){check(isTypedArray(data),"invalid parameter type"+encolon(message)+". must be a typed array")}function checkTypeOf(value,type,message){check(typeof value===type,"invalid parameter type"+encolon(message)+". expected "+type+", got "+typeof value)}function checkNonNegativeInt(value,message){check(value>=0&&(value|0)===value,"invalid parameter type, ("+value+")"+encolon(message)+". must be a nonnegative integer")}function checkOneOf(value,list,message){check(list.indexOf(value)>=0,"invalid value"+encolon(message)+". must be one of: "+list)}module.exports=Object.assign(check,{raise:raise,parameter:checkParameter,type:checkTypeOf,isTypedArray:checkIsTypedArray,nni:checkNonNegativeInt,oneOf:checkOneOf})},{"./is-typed-array":16}],4:[function(_dereq_,module,exports){module.exports=typeof performance!=="undefined"&&performance.now?function(){return performance.now()}:function(){return+new Date}},{}],5:[function(_dereq_,module,exports){function slice(x){return Array.prototype.slice.call(x)}module.exports=function createEnvironment(){var varCounter=0;var linkedNames=[];var linkedValues=[];function link(value){var name="g"+varCounter++;linkedNames.push(name);linkedValues.push(value);return name}function block(){var code=[];function push(){code.push.apply(code,slice(arguments))}var vars=[];function def(){var name="v"+varCounter++;vars.push(name);if(arguments.length>0){code.push(name,"=");code.push.apply(code,slice(arguments));code.push(";")}return name}return Object.assign(push,{def:def,toString:function(){return[vars.length>0?"var "+vars+";":"",code.join("")].join("")}})}var procedures={};function proc(name){var args=[];function arg(){var name="a"+varCounter++;args.push(name);return name}var body=block();var bodyToString=body.toString;var result=procedures[name]=Object.assign(body,{arg:arg,toString:function(){return["function(",args.join(),"){",bodyToString(),"}"].join("")}});return result}function compile(){var code=['"use strict";return {'];Object.keys(procedures).forEach(function(name){code.push('"',name,'":',procedures[name].toString(),",")});code.push("}");var proc=Function.apply(null,linkedNames.concat([code.join("")]));return proc.apply(null,linkedValues)}return{link:link,block:block,proc:proc,compile:compile}}},{}],6:[function(_dereq_,module,exports){var check=_dereq_("./check");var createEnvironment=_dereq_("./codegen");var primTypes=_dereq_("./constants/primitives.json");var glTypes=_dereq_("./constants/dtypes.json");var GL_ELEMENT_ARRAY_BUFFER=34963;var GL_FLOAT=5126;var GL_FLOAT_VEC2=35664;var GL_FLOAT_VEC3=35665;var GL_FLOAT_VEC4=35666;var GL_INT=5124;var GL_INT_VEC2=35667;var GL_INT_VEC3=35668;var GL_INT_VEC4=35669;var GL_BOOL=35670;var GL_BOOL_VEC2=35671;var GL_BOOL_VEC3=35672;var GL_BOOL_VEC4=35673;var GL_FLOAT_MAT2=35674;var GL_FLOAT_MAT3=35675;var GL_FLOAT_MAT4=35676;var GL_SAMPLER_2D=35678;var GL_SAMPLER_CUBE=35680;var GL_TRIANGLES=4;var GL_CULL_FACE=2884;var GL_BLEND=3042;var GL_DITHER=3024;var GL_STENCIL_TEST=2960;var GL_DEPTH_TEST=2929;var GL_SCISSOR_TEST=3089;var GL_POLYGON_OFFSET_FILL=32823;var GL_SAMPLE_ALPHA_TO_COVERAGE=32926;var GL_SAMPLE_COVERAGE=32928;var GL_FRONT=1028;var GL_BACK=1029;var GL_CW=2304;var GL_CCW=2305;var GL_MIN_EXT=32775;var GL_MAX_EXT=32776;var blendFuncs={0:0,1:1,zero:0,one:1,"src color":768,"one minus src color":769,"src alpha":770,"one minus src alpha":771,"dst color":774,"one minus dst color":775,"dst alpha":772,"one minus dst alpha":773,"constant color":32769,"one minus constant color":32770,"constant alpha":32771,"one minus constant alpha":32772,"src alpha saturate":776};var compareFuncs={never:512,less:513,"<":513,equal:514,"=":514,"==":514,"===":514,lequal:515,"<=":515,greater:516,">":516,notequal:517,"!=":517,"!==":517,gequal:518,">=":518,always:519};var stencilOps={0:0,zero:0,keep:7680,replace:7681,increment:7682,decrement:7683,"increment wrap":34055,"decrement wrap":34056,invert:5386};function typeLength(x){switch(x){case GL_FLOAT_VEC2:case GL_INT_VEC2:case GL_BOOL_VEC2:return 2;case GL_FLOAT_VEC3:case GL_INT_VEC3:case GL_BOOL_VEC3:return 3;case GL_FLOAT_VEC4:case GL_INT_VEC4:case GL_BOOL_VEC4:return 4;default:return 1}}function setUniformString(gl,type,location,value){var infix;var separator=",";switch(type){case GL_FLOAT:infix="1f";break;case GL_FLOAT_VEC2:infix="2fv";break;case GL_FLOAT_VEC3:infix="3fv";break;case GL_FLOAT_VEC4:infix="4fv";break;case GL_BOOL:case GL_INT:infix="1i";break;case GL_BOOL_VEC2:case GL_INT_VEC2:infix="2iv";break;case GL_BOOL_VEC3:case GL_INT_VEC3:infix="3iv";break;case GL_BOOL_VEC4:case GL_INT_VEC4:infix="4iv";break;case GL_FLOAT_MAT2:infix="Matrix2fv";separator=",false,";break;case GL_FLOAT_MAT3:infix="Matrix3fv";separator=",false,";break;case GL_FLOAT_MAT4:infix="Matrix4fv";separator=",false,";break;default:check.raise("unsupported uniform type")}return gl+".uniform"+infix+"("+location+separator+value+");"}function stackTop(x){return x+"["+x+".length-1]"}module.exports=function reglCompiler(gl,extensionState,bufferState,elementState,textureState,fboState,glState,uniformState,attributeState,shaderState,drawState,frameState){var extensions=extensionState.extensions;var contextState=glState.contextState;var blendEquations={add:32774,subtract:32778,"reverse subtract":32779};if(extensions.ext_blend_minmax){blendEquations.min=GL_MIN_EXT;blendEquations.max=GL_MAX_EXT}var drawCallCounter=0;function compileShaderDraw(program){var env=createEnvironment();var link=env.link;var draw=env.proc("draw");var def=draw.def;var GL=link(gl);var PROGRAM=link(program.program);var BIND_ATTRIBUTE=link(attributeState.bind);var DRAW_STATE={count:link(drawState.count),offset:link(drawState.offset),instances:link(drawState.instances),primitive:link(drawState.primitive)};var ELEMENT_STATE=link(elementState.elements);var TEXTURE_UNIFORMS=[];draw(GL,".useProgram(",PROGRAM,");");program.attributes.forEach(function(attribute){var STACK=link(attributeState.attributes[attribute.name]);draw(BIND_ATTRIBUTE,"(",attribute.location,",",link(attributeState.bindings[attribute.location]),",",STACK,".records[",STACK,".top]",",",typeLength(attribute.info.type),");")});program.uniforms.forEach(function(uniform){var LOCATION=link(uniform.location);var STACK=link(uniformState.uniforms[uniform.name]);var TOP=STACK+"["+STACK+".length-1]";if(uniform.info.type===GL_SAMPLER_2D||uniform.info.type===GL_SAMPLER_CUBE){var TEX_VALUE=def(TOP+"._texture");TEXTURE_UNIFORMS.push(TEX_VALUE);draw(setUniformString(GL,GL_INT,LOCATION,TEX_VALUE+".bind()"))}else{draw(setUniformString(GL,uniform.info.type,LOCATION,TOP))}});TEXTURE_UNIFORMS.forEach(function(TEX_VALUE){draw(TEX_VALUE,".unbind();")});var CUR_PRIMITIVE=def(stackTop(DRAW_STATE.primitive));var CUR_COUNT=def(stackTop(DRAW_STATE.count));var CUR_OFFSET=def(stackTop(DRAW_STATE.offset));var CUR_ELEMENTS=def(stackTop(ELEMENT_STATE));draw("if(",CUR_COUNT,"){");var instancing=extensions.angle_instanced_arrays;if(instancing){var CUR_INSTANCES=def(stackTop(DRAW_STATE.instances));var INSTANCE_EXT=link(instancing);draw("if(",CUR_ELEMENTS,"){",CUR_ELEMENTS,".bind();","if(",CUR_INSTANCES,">0){",INSTANCE_EXT,".drawElementsInstancedANGLE(",CUR_PRIMITIVE,",",CUR_COUNT,",",CUR_ELEMENTS,".type,",CUR_OFFSET,",",CUR_INSTANCES,");}else{",GL,".drawElements(",CUR_PRIMITIVE,",",CUR_COUNT,",",CUR_ELEMENTS,".type,",CUR_OFFSET,");}","}else if(",CUR_INSTANCES,">0){",INSTANCE_EXT,".drawArraysInstancedANGLE(",CUR_PRIMITIVE,",",CUR_OFFSET,",",CUR_COUNT,",",CUR_INSTANCES,");}else{",GL,".drawArrays(",CUR_PRIMITIVE,",",CUR_OFFSET,",",CUR_COUNT,");}}")}else{draw("if(",CUR_ELEMENTS,"){",GL,".drawElements(",CUR_PRIMITIVE,",",CUR_COUNT,",",CUR_ELEMENTS,".type,",CUR_OFFSET,");}","}else{",GL,".drawArrays(",CUR_PRIMITIVE,",",CUR_OFFSET,",",CUR_COUNT,");}")}return env.compile().draw}function compileBatch(program,options,uniforms,attributes,staticOptions){var env=createEnvironment();var link=env.link;var batch=env.proc("batch");var exit=env.block();var def=batch.def;var arg=batch.arg;var GL=link(gl);var PROGRAM=link(program.program);var BIND_ATTRIBUTE=link(attributeState.bind);var FRAME_STATE=link(frameState);var DRAW_STATE={count:link(drawState.count),offset:link(drawState.offset),instances:link(drawState.instances),primitive:link(drawState.primitive)};var ELEMENTS=link(elementState.elements);var CUR_COUNT=def(stackTop(DRAW_STATE.count));var CUR_OFFSET=def(stackTop(DRAW_STATE.offset));var CUR_PRIMITIVE=def(stackTop(DRAW_STATE.primitive));var CUR_ELEMENTS=def(stackTop(ELEMENTS));var CUR_INSTANCES;var INSTANCE_EXT;var instancing=extensions.angle_instanced_arrays;if(instancing){CUR_INSTANCES=def(stackTop(DRAW_STATE.instances));INSTANCE_EXT=link(instancing)}var hasDynamicElements="elements"in options;var NUM_ARGS=arg();var ARGS=arg();var ARG=def();var BATCH_ID=def();var dynamicVars={};function dyn(x){var id=x.id;var result=dynamicVars[id];if(result){return result}if(x.func){result=batch.def(link(x.data),"(",ARG,",",BATCH_ID,",",FRAME_STATE,")")}else{result=batch.def(ARG,".",x.data)}dynamicVars[id]=result;return result}function findInfo(list,name){return list.find(function(item){return item.name===name})}batch(GL,".useProgram(",PROGRAM,");");program.uniforms.forEach(function(uniform){if(uniform.name in uniforms){return}var LOCATION=link(uniform.location);var STACK=link(uniformState.uniforms[uniform.name]);var TOP=STACK+"["+STACK+".length-1]";if(uniform.info.type===GL_SAMPLER_2D||uniform.info.type===GL_SAMPLER_CUBE){var TEX_VALUE=def(TOP+"._texture");batch(setUniformString(GL,GL_INT,LOCATION,TEX_VALUE+".bind()"));exit(TEX_VALUE,".unbind();")}else{batch(setUniformString(GL,uniform.info.type,LOCATION,TOP))}});program.attributes.forEach(function(attribute){if(attributes.name in attributes){return}var STACK=link(attributeState.attributes[attribute.name]);batch(BIND_ATTRIBUTE,"(",attribute.location,",",link(attributeState.bindings[attribute.location]),",",STACK,".records[",STACK,".top]",",",typeLength(attribute.info.type),");")});if(!hasDynamicElements){batch("if(",CUR_ELEMENTS,"){",GL,".bindBuffer(",GL_ELEMENT_ARRAY_BUFFER,",",CUR_ELEMENTS,".buffer._buffer.buffer);","}else{",GL,".bindBuffer(",GL_ELEMENT_ARRAY_BUFFER,",null);","}")}batch("for(",BATCH_ID,"=0;",BATCH_ID,"<",NUM_ARGS,";++",BATCH_ID,"){",ARG,"=",ARGS,"[",BATCH_ID,"];");Object.keys(options).forEach(function(option){var VALUE=dyn(options[option]);function setCap(flag){batch("if(",VALUE,"){",GL,".enable(",flag,");}else{",GL,".disable(",flag,");}")}switch(option){case"cull.enable":setCap(GL_CULL_FACE);break;case"blend.enable":setCap(GL_BLEND);break;case"dither":setCap(GL_DITHER);break;case"stencil.enable":setCap(GL_STENCIL_TEST);break;case"depth.enable":setCap(GL_DEPTH_TEST);break;case"scissor.enable":setCap(GL_SCISSOR_TEST);break;case"polygonOffset.enable":setCap(GL_POLYGON_OFFSET_FILL);break;case"sample.alpha":setCap(GL_SAMPLE_ALPHA_TO_COVERAGE);break;case"sample.enable":setCap(GL_SAMPLE_COVERAGE);break;case"depth.mask":batch(GL,".depthMask(",VALUE,");");break;case"depth.func":var DEPTH_FUNCS=link(compareFuncs);batch(GL,".depthFunc(",DEPTH_FUNCS,"[",VALUE,"]);");break;case"depth.range":batch(GL,".depthRange(",VALUE,"[0],",VALUE,"[1]);");break;case"blend.color":batch(GL,".blendColor(",VALUE,"[0],",VALUE,"[1],",VALUE,"[2],",VALUE,"[3]);");break;case"blend.equation":var BLEND_EQUATIONS=link(blendEquations);batch("if(typeof ",VALUE,'==="string"){',GL,".blendEquation(",BLEND_EQUATIONS,"[",VALUE,"]);","}else{",GL,".blendEquationSeparate(",BLEND_EQUATIONS,"[",VALUE,".rgb],",BLEND_EQUATIONS,"[",VALUE,".alpha]);","}");break;case"blend.func":var BLEND_FUNCS=link(blendFuncs);batch(GL,".blendFuncSeparate(",BLEND_FUNCS,'["srcRGB" in ',VALUE,"?",VALUE,".srcRGB:",VALUE,".src],",BLEND_FUNCS,'["dstRGB" in ',VALUE,"?",VALUE,".dstRGB:",VALUE,".dst],",BLEND_FUNCS,'["srcAlpha" in ',VALUE,"?",VALUE,".srcAlpha:",VALUE,".src],",BLEND_FUNCS,'["dstAlpha" in ',VALUE,"?",VALUE,".dstAlpha:",VALUE,".dst]);");break;case"stencil.mask":batch(GL,".stencilMask(",VALUE,");");break;case"stencil.func":var STENCIL_FUNCS=link(compareFuncs);batch(GL,".stencilFunc(",STENCIL_FUNCS,"[",VALUE,'.cmp||"always"],',VALUE,".ref|0,",'"mask" in ',VALUE,"?",VALUE,".mask:-1);");break;case"stencil.opFront":case"stencil.opBack":var STENCIL_OPS=link(stencilOps);batch(GL,".stencilOpSeparate(",option==="stencil.opFront"?GL_FRONT:GL_BACK,",",STENCIL_OPS,"[",VALUE,'.fail||"keep"],',STENCIL_OPS,"[",VALUE,'.zfail||"keep"],',STENCIL_OPS,"[",VALUE,'.pass||"keep"]);');break;case"polygonOffset.offset":batch(GL,".polygonOffset(",VALUE,".factor||0,",VALUE,".units||0);");break;case"cull.face":batch(GL,".cullFace(",VALUE,'==="front"?',GL_FRONT,":",GL_BACK,");");break;case"lineWidth":batch(GL,".lineWidth(",VALUE,");");break;case"frontFace":batch(GL,".frontFace(",VALUE,'==="cw"?',GL_CW,":",GL_CCW,");");break;case"colorMask":batch(GL,".colorMask(",VALUE,"[0],",VALUE,"[1],",VALUE,"[2],",VALUE,"[3]);");break;case"sample.coverage":batch(GL,".sampleCoverage(",VALUE,".value,",VALUE,".invert);");break;case"scissor.box":var SCISSOR_X=batch.def(VALUE+".x||0");var SCISSOR_Y=batch.def(VALUE+".y||0");batch(GL,".scissor(",SCISSOR_X,",",SCISSOR_Y,",",'"w" in ',VALUE,"?",VALUE,".w:",GL,".drawingBufferWidth-",SCISSOR_X,",",'"h" in ',VALUE,"?",VALUE,".h:",GL,".drawingBufferHeight-",SCISSOR_Y,");");break;case"viewport":var VIEWPORT_X=batch.def(VALUE+".x||0");var VIEWPORT_Y=batch.def(VALUE+".y||0");batch(GL,".viewport(",VIEWPORT_X,",",VIEWPORT_Y,",",'"w" in ',VALUE,"?",VALUE,".w:",GL,".drawingBufferWidth-",VIEWPORT_X,",",'"h" in ',VALUE,"?",VALUE,".h:",GL,".drawingBufferHeight-",VIEWPORT_Y,");");break;case"primitives":case"offset":case"count":case"elements":break;default:check.raise("unsupported option for batch",option)}});var programUniforms=program.uniforms;var DYNAMIC_TEXTURES=[];Object.keys(uniforms).forEach(function(uniform){var data=findInfo(programUniforms,uniform);if(!data){return}var TYPE=data.info.type;var LOCATION=link(data.location);var VALUE=dyn(uniforms[uniform]);if(data.info.type===GL_SAMPLER_2D||data.info.type===GL_SAMPLER_CUBE){var TEX_VALUE=def(VALUE+"._texture");DYNAMIC_TEXTURES.push(TEX_VALUE);batch(setUniformString(GL,GL_INT,LOCATION,TEX_VALUE+".bind()"))}else{batch(setUniformString(GL,TYPE,LOCATION,VALUE))}});DYNAMIC_TEXTURES.forEach(function(VALUE){batch(VALUE,".unbind();")});var programAttributes=program.attributes;Object.keys(attributes).forEach(function(attribute){var data=findInfo(programAttributes,attribute);if(!data){return}batch(BIND_ATTRIBUTE,"(",data.location,",",link(attribute.bindings[data.location]),",",dyn(attributes[attribute]),",",typeLength(data.info.type),");")});if(options.count){batch(CUR_COUNT,"=",dyn(options.count),";")}else if(!useElementOption("count")){batch("if(",CUR_COUNT,"){")}if(options.offset){batch(CUR_OFFSET,"=",dyn(options.offset),";")}if(options.primitive){var PRIM_TYPES=link(primTypes);batch(CUR_PRIMITIVE,"=",PRIM_TYPES,"[",dyn(options.primitive),"];")}function useElementOption(x){return hasDynamicElements&&!(x in options||x in staticOptions)}if(hasDynamicElements){var dynElements=dyn(options.elements);batch(CUR_ELEMENTS,"=",dynElements,"?",dynElements,"._elements:null;")}if(useElementOption("offset")){batch(CUR_OFFSET,"=0;")}batch("if(",CUR_ELEMENTS,"){");if(useElementOption("count")){batch(CUR_COUNT,"=",CUR_ELEMENTS,".vertCount;","if(",CUR_COUNT,">0){")}if(useElementOption("primitive")){batch(CUR_PRIMITIVE,"=",CUR_ELEMENTS,".primType;")}if(hasDynamicElements){batch(GL,".bindBuffer(",GL_ELEMENT_ARRAY_BUFFER,",",CUR_ELEMENTS,".buffer._buffer.buffer);")}if(instancing){if(options.instances){batch(CUR_INSTANCES,"=",dyn(options.instances),";")}batch("if(",CUR_INSTANCES,">0){",INSTANCE_EXT,".drawElementsInstancedANGLE(",CUR_PRIMITIVE,",",CUR_COUNT,",",CUR_ELEMENTS,".type,",CUR_OFFSET,",",CUR_INSTANCES,");}else{")}batch(GL,".drawElements(",CUR_PRIMITIVE,",",CUR_COUNT,",",CUR_ELEMENTS,".type,",CUR_OFFSET,");");if(instancing){batch("}")}if(useElementOption("count")){batch("}")}batch("}else{");if(!useElementOption("count")){if(useElementOption("primitive")){batch(CUR_PRIMITIVE,"=",GL_TRIANGLES,";")}if(instancing){batch("if(",CUR_INSTANCES,">0){",INSTANCE_EXT,".drawArraysInstancedANGLE(",CUR_PRIMITIVE,",",CUR_OFFSET,",",CUR_COUNT,",",CUR_INSTANCES,");}else{")}batch(GL,".drawArrays(",CUR_PRIMITIVE,",",CUR_OFFSET,",",CUR_COUNT,");}");if(instancing){batch("}")}}batch("}}",exit);return env.compile().batch}function compileCommand(staticOptions,staticUniforms,staticAttributes,dynamicOptions,dynamicUniforms,dynamicAttributes,hasDynamic){var env=createEnvironment();var link=env.link;var block=env.block;var proc=env.proc;var callId=drawCallCounter++;var GL_POLL=link(glState.poll);var FRAG_SHADER_STATE=link(shaderState.fragShaders);var VERT_SHADER_STATE=link(shaderState.vertShaders);var PROGRAM_STATE=link(shaderState.programs);var DRAW_STATE={count:link(drawState.count),offset:link(drawState.offset),instances:link(drawState.instances),primitive:link(drawState.primitive)};var ELEMENT_STATE=link(elementState.elements);var PRIM_TYPES=link(primTypes);var COMPARE_FUNCS=link(compareFuncs);var STENCIL_OPS=link(stencilOps);var CONTEXT_STATE={};function linkContext(x){var result=CONTEXT_STATE[x];if(result){return result}result=CONTEXT_STATE[x]=link(contextState[x]);return result}var entry=block();var exit=block();function handleStaticOption(param,value){var STATE_STACK=linkContext(param);entry(STATE_STACK,".push(",value,");");exit(STATE_STACK,".pop();")}var hasShader=false;Object.keys(staticOptions).forEach(function(param){var value=staticOptions[param];switch(param){case"frag":hasShader=true;entry(FRAG_SHADER_STATE,".push(",link(value),");");exit(FRAG_SHADER_STATE,".pop();");break;case"vert":hasShader=true;entry(VERT_SHADER_STATE,".push(",link(value),");");exit(VERT_SHADER_STATE,".pop();");break;case"count":case"offset":case"instances":check.nni(value,param);entry(DRAW_STATE[param],".push(",value,");");exit(DRAW_STATE[param],".pop();");break;case"primitive":check.parameter(value,primTypes,"not a valid drawing primitive");var primType=primTypes[value];entry(DRAW_STATE.primitive,".push(",primType,");");exit(DRAW_STATE.primitive,".pop();");break;case"elements":var elements=elementState.getElements(value);var hasPrimitive=!("primitive"in staticOptions);var hasCount=!("count"in staticOptions);if(elements){var ELEMENTS=link(elements);entry(ELEMENT_STATE,".push(",ELEMENTS,");");if(hasPrimitive){entry(DRAW_STATE.primitive,".push(",ELEMENTS,".primType);")}if(hasCount){entry(DRAW_STATE.count,".push(",ELEMENTS,".vertCount);")}}else{entry(ELEMENT_STATE,".push(null);");if(hasPrimitive){entry(DRAW_STATE.primitive,".push(",GL_TRIANGLES,");")}if(hasCount){entry(DRAW_STATE.count,".push(0);")}}if(hasPrimitive){exit(DRAW_STATE.primitive,".pop();")}if(hasCount){exit(DRAW_STATE.count,".pop();")}if(!("offset"in staticOptions)){entry(DRAW_STATE.offset,".push(0);");exit(DRAW_STATE.offset,".pop();")}exit(ELEMENT_STATE,".pop();");break;case"cull.enable":case"blend.enable":case"dither":case"stencil.enable":case"depth.enable":case"scissor.enable":case"polygonOffset.enable":case"sample.alpha":case"sample.enable":case"depth.mask":check.type(value,"boolean",param);handleStaticOption(param,value);break;case"depth.func":check.parameter(value,compareFuncs,param);handleStaticOption(param,compareFuncs[value]);break;case"depth.range":check(Array.isArray(value)&&value.length===2&&value[0]<=value[1],"depth range is 2d array");var DEPTH_RANGE_STACK=linkContext(param);entry(DEPTH_RANGE_STACK,".push(",value[0],",",value[1],");");exit(DEPTH_RANGE_STACK,".pop();");break;case"blend.func":var BLEND_FUNC_STACK=linkContext(param);check.type(value,"object","blend func must be an object");var srcRGB="srcRGB"in value?value.srcRGB:value.src;var srcAlpha="srcAlpha"in value?value.srcAlpha:value.src;var dstRGB="dstRGB"in value?value.dstRGB:value.dst;var dstAlpha="dstAlpha"in value?value.dstAlpha:value.dst;check.parameter(srcRGB,blendFuncs);check.parameter(srcAlpha,blendFuncs);check.parameter(dstRGB,blendFuncs);check.parameter(dstAlpha,blendFuncs);entry(BLEND_FUNC_STACK,".push(",blendFuncs[srcRGB],",",blendFuncs[dstRGB],",",blendFuncs[srcAlpha],",",blendFuncs[dstAlpha],");");exit(BLEND_FUNC_STACK,".pop();");break;case"blend.equation":var BLEND_EQUATION_STACK=linkContext(param);if(typeof value==="string"){check.parameter(value,blendEquations,"invalid blend equation");entry(BLEND_EQUATION_STACK,".push(",blendEquations[value],",",blendEquations[value],");")}else if(typeof value==="object"){check.parameter(value.rgb,blendEquations,"invalid blend equation rgb");check.parameter(value.alpha,blendEquations,"invalid blend equation alpha");entry(BLEND_EQUATION_STACK,".push(",blendEquations[value.rgb],",",blendEquations[value.alpha],");")}else{check.raise("invalid blend equation")}exit(BLEND_EQUATION_STACK,".pop();");break;case"blend.color":check(Array.isArray(value)&&value.length===4,"blend color is a 4d array");var BLEND_COLOR_STACK=linkContext(param);entry(BLEND_COLOR_STACK,".push(",value[0],",",value[1],",",value[2],",",value[3],");");exit(BLEND_COLOR_STACK,".pop();");break;case"stencil.mask":check.type(value,"number","stencil mask must be an integer");var STENCIL_MASK_STACK=linkContext(param);entry(STENCIL_MASK_STACK,".push(",value,");");exit(STENCIL_MASK_STACK,".pop();");break;case"stencil.func":check.type(value,"object","stencil func must be an object");var cmp=value.cmp||"keep";var ref=value.ref||0;var mask="mask"in value?value.mask:-1;check.parameter(cmp,compareFuncs,"invalid stencil func cmp");check.type(ref,"number","stencil func ref");check.type(mask,"number","stencil func mask");var STENCIL_FUNC_STACK=linkContext(param);entry(STENCIL_FUNC_STACK,".push(",compareFuncs[cmp],",",ref,",",mask,");");exit(STENCIL_FUNC_STACK,".pop();");break;case"stencil.opFront":case"stencil.opBack":check.type(value,"object",param);var fail=value.fail||"keep";var zfail=value.zfail||"keep";var pass=value.pass||"keep";check.parameter(fail,stencilOps,param);check.parameter(zfail,stencilOps,param);check.parameter(pass,stencilOps,param);var STENCIL_OP_STACK=linkContext(param);entry(STENCIL_OP_STACK,".push(",stencilOps[fail],",",stencilOps[zfail],",",stencilOps[pass],");");exit(STENCIL_OP_STACK,".pop();");break;case"polygonOffset.offset":check.type(value,"object",param);var factor=value.factor||0;var units=value.units||0;check.type(factor,"number","offset.factor");check.type(units,"number","offset.units");var POLYGON_OFFSET_STACK=linkContext(param);entry(POLYGON_OFFSET_STACK,".push(",factor,",",units,");");exit(POLYGON_OFFSET_STACK,".pop();");break;case"cull.face":var face=0;if(value==="front"){face=GL_FRONT}else if(value==="back"){face=GL_BACK}check(!!face,"cull.face");var CULL_FACE_STACK=linkContext(param);entry(CULL_FACE_STACK,".push(",face,");");exit(CULL_FACE_STACK,".pop();");break;case"lineWidth":check(value>0&&typeof value==="number",param);handleStaticOption(param,value);break;case"frontFace":var orientation=0;if(value==="cw"){orientation=GL_CW}else if(value==="ccw"){orientation=GL_CCW}check(!!orientation,"frontFace");var FRONT_FACE_STACK=linkContext(param);entry(FRONT_FACE_STACK,".push(",orientation,");");exit(FRONT_FACE_STACK,".pop();");break;case"colorMask":check(Array.isArray(value)&&value.length===4,"color mask must be length 4 array");var COLOR_MASK_STACK=linkContext(param);entry(COLOR_MASK_STACK,".push(",value.map(function(v){return!!v}).join(),");");exit(COLOR_MASK_STACK,".pop();");break;case"sample.coverage":check.type(value,"object",param);var sampleValue="value"in value?value.value:1;var sampleInvert=!!value.invert;check(typeof sampleValue==="number"&&sampleValue>=0&&sampleValue<=1,"sample value");var SAMPLE_COVERAGE_STACK=linkContext(param);entry(SAMPLE_COVERAGE_STACK,".push(",sampleValue,",",sampleInvert,");");exit(SAMPLE_COVERAGE_STACK,".pop();");break;case"viewport":case"scissor.box":check(typeof value==="object"&&value,param+" is an object");var X=value.x||0;var Y=value.y||0;var W=-1;var H=-1;check(typeof X==="number"&&X>=0,param+".x must be a positive int");check(typeof Y==="number"&&Y>=0,param+".y must be a positive int");
if("w"in value){W=value.w;check(typeof W==="number"&&W>=0,param+".w must be a positive int")}if("h"in value){H=value.h;check(typeof H==="number"&&H>=0,param+".h must be a positive int")}var BOX_STACK=linkContext(param);entry(BOX_STACK,".push(",X,",",Y,",",W,",",H,");");exit(BOX_STACK,".pop();");break;default:check.raise("unsupported parameter "+param);break}});if(hasShader){if(staticOptions.frag&&staticOptions.vert){var fragSrc=staticOptions.frag;var vertSrc=staticOptions.vert;entry(PROGRAM_STATE,".push(",link(shaderState.create(vertSrc,fragSrc)),");")}else{var FRAG_SRC=entry.def(FRAG_SHADER_STATE,"[",FRAG_SHADER_STATE,".length-1]");var VERT_SRC=entry.def(VERT_SHADER_STATE,"[",VERT_SHADER_STATE,".length-1]");var LINK_PROG=link(shaderState.create);entry(PROGRAM_STATE,".push(",LINK_PROG,"(",FRAG_SRC,",",VERT_SRC,"));")}exit(PROGRAM_STATE,".pop();")}Object.keys(staticUniforms).forEach(function(uniform){uniformState.def(uniform);var STACK=link(uniformState.uniforms[uniform]);var VALUE;var value=staticUniforms[uniform];if(typeof value==="function"&&value._reglType){VALUE=link(value)}else if(Array.isArray(value)){VALUE=link(value.slice())}else{VALUE=+value}entry(STACK,".push(",VALUE,");");exit(STACK,".pop();")});Object.keys(staticAttributes).forEach(function(attribute){attributeState.def(attribute);var ATTRIBUTE=link(attributeState.attributes[attribute]);var data=staticAttributes[attribute];if(typeof data==="number"){entry(ATTRIBUTE,".pushVec(",+data,",0,0,0);")}else{check(!!data,"invalid attribute: "+attribute);if(Array.isArray(data)){entry(ATTRIBUTE,".pushVec(",[data[0]||0,data[1]||0,data[2]||0,data[3]||0],");")}else{var buffer=bufferState.getBuffer(data);var size=0;var stride=0;var offset=0;var divisor=0;var normalized=false;var type=GL_FLOAT;if(!buffer){check.type(data,"object",'invalid attribute "'+attribute+'"');buffer=bufferState.getBuffer(data.buffer);size=data.size||0;stride=data.stride||0;offset=data.offset||0;divisor=data.divisor||0;normalized=data.normalized||false;check(!!buffer,"invalid attribute "+attribute+".buffer");type=buffer.dtype;if("type"in data){check.parameter(data.type,glTypes,"attribute type");type=glTypes[data.type]}}else{type=buffer.dtype}check(!!buffer,"invalid attribute "+attribute+".buffer");check.nni(stride,attribute+".stride");check.nni(offset,attribute+".offset");check.nni(divisor,attribute+".divisor");check.type(normalized,"boolean",attribute+".normalized");check.oneOf(size,[0,1,2,3,4],attribute+".size");entry(ATTRIBUTE,".pushPtr(",[link(buffer),size,offset,stride,divisor,normalized,type].join(),");")}}exit(ATTRIBUTE,".pop();")});var dynamicEntry=env.block();var dynamicExit=env.block();var FRAMESTATE;var DYNARGS;if(hasDynamic){FRAMESTATE=link(frameState);DYNARGS=entry.def()}var dynamicVars={};function dyn(x){var id=x.id;var result=dynamicVars[id];if(result){return result}if(x.func){result=dynamicEntry.def(link(x.data),"(",DYNARGS,",0,",FRAMESTATE,")")}else{result=dynamicEntry.def(DYNARGS,".",x.data)}dynamicVars[id]=result;return result}Object.keys(dynamicOptions).forEach(function(param){var variable=dyn(dynamicOptions[param]);switch(param){case"cull.enable":case"blend.enable":case"dither":case"stencil.enable":case"depth.enable":case"scissor.enable":case"polygonOffset.enable":case"sample.alpha":case"sample.enable":case"lineWidth":case"depth.mask":var STATE_STACK=linkContext(param);dynamicEntry(STATE_STACK,".push(",variable,");");dynamicExit(STATE_STACK,".pop();");break;case"count":case"offset":case"instances":var DRAW_STACK=DRAW_STATE[param];dynamicEntry(DRAW_STACK,".push(",variable,");");dynamicExit(DRAW_STACK,".pop();");break;case"primitive":var PRIM_STACK=DRAW_STATE.primitive;dynamicEntry(PRIM_STACK,".push(",PRIM_TYPES,"[",variable,"]);");dynamicExit(PRIM_STACK,".pop();");break;case"depth.func":var DEPTH_FUNC_STACK=linkContext(param);dynamicEntry(DEPTH_FUNC_STACK,".push(",COMPARE_FUNCS,"[",variable,"]);");dynamicExit(DEPTH_FUNC_STACK,".pop();");break;case"blend.func":var BLEND_FUNC_STACK=linkContext(param);var BLEND_FUNCS=link(blendFuncs);dynamicEntry(BLEND_FUNC_STACK,".push(",BLEND_FUNCS,'["srcRGB" in ',variable,"?",variable,".srcRGB:",variable,".src],",BLEND_FUNCS,'["dstRGB" in ',variable,"?",variable,".dstRGB:",variable,".dst],",BLEND_FUNCS,'["srcAlpha" in ',variable,"?",variable,".srcAlpha:",variable,".src],",BLEND_FUNCS,'["dstAlpha" in ',variable,"?",variable,".dstAlpha:",variable,".dst]);");dynamicExit(BLEND_FUNC_STACK,".pop();");break;case"blend.equation":var BLEND_EQUATION_STACK=linkContext(param);var BLEND_EQUATIONS=link(blendEquations);dynamicEntry("if(typeof ",variable,'==="string"){',BLEND_EQUATION_STACK,".push(",BLEND_EQUATIONS,"[",variable,"],",BLEND_EQUATIONS,"[",variable,"]);","}else{",BLEND_EQUATION_STACK,".push(",BLEND_EQUATIONS,"[",variable,".rgb],",BLEND_EQUATIONS,"[",variable,".alpha]);","}");dynamicExit(BLEND_EQUATION_STACK,".pop();");break;case"blend.color":var BLEND_COLOR_STACK=linkContext(param);dynamicEntry(BLEND_COLOR_STACK,".push(",variable,"[0],",variable,"[1],",variable,"[2],",variable,"[3]);");dynamicExit(BLEND_COLOR_STACK,".pop();");break;case"stencil.mask":var STENCIL_MASK_STACK=linkContext(param);dynamicEntry(STENCIL_MASK_STACK,".push(",variable,");");dynamicExit(STENCIL_MASK_STACK,".pop();");break;case"stencil.func":var STENCIL_FUNC_STACK=linkContext(param);dynamicEntry(STENCIL_FUNC_STACK,".push(",COMPARE_FUNCS,"[",variable,".cmp],",variable,".ref|0,",'"mask" in ',variable,"?",variable,".mask:-1);");dynamicExit(STENCIL_FUNC_STACK,".pop();");break;case"stencil.opFront":case"stencil.opBack":var STENCIL_OP_STACK=linkContext(param);dynamicEntry(STENCIL_OP_STACK,".push(",STENCIL_OPS,"[",variable,'.fail||"keep"],',STENCIL_OPS,"[",variable,'.zfail||"keep"],',STENCIL_OPS,"[",variable,'.pass||"keep"]);');dynamicExit(STENCIL_OP_STACK,".pop();");break;case"polygonOffset.offset":var POLYGON_OFFSET_STACK=linkContext(param);dynamicEntry(POLYGON_OFFSET_STACK,".push(",variable,".factor||0,",variable,".units||0);");dynamicExit(POLYGON_OFFSET_STACK,".pop();");break;case"cull.face":var CULL_FACE_STACK=linkContext(param);dynamicEntry(CULL_FACE_STACK,".push(",variable,'==="front"?',GL_FRONT,":",GL_BACK,");");dynamicExit(CULL_FACE_STACK,".pop();");break;case"frontFace":var FRONT_FACE_STACK=linkContext(param);dynamicEntry(FRONT_FACE_STACK,".push(",variable,'==="cw"?',GL_CW,":",GL_CCW,");");dynamicExit(FRONT_FACE_STACK,".pop();");break;case"colorMask":var COLOR_MASK_STACK=linkContext(param);dynamicEntry(COLOR_MASK_STACK,".push(",variable,"[0],",variable,"[1],",variable,"[2],",variable,"[3]);");dynamicExit(COLOR_MASK_STACK,".pop();");break;case"sample.coverage":var SAMPLE_COVERAGE_STACK=linkContext(param);dynamicEntry(SAMPLE_COVERAGE_STACK,".push(",variable,".value,",variable,".invert);");dynamicExit(SAMPLE_COVERAGE_STACK,".pop();");break;case"scissor.box":case"viewport":var BOX_STACK=linkContext(param);dynamicEntry(BOX_STACK,".push(",variable,".x||0,",variable,".y||0,",'"w" in ',variable,"?",variable,".w:-1,",'"h" in ',variable,"?",variable,".h:-1);");dynamicExit(BOX_STACK,".pop();");break;case"elements":var hasPrimitive=!("primitive"in dynamicOptions)&&!("primitive"in staticOptions);var hasCount=!("count"in dynamicOptions)&&!("count"in staticOptions);var hasOffset=!("offset"in dynamicOptions)&&!("offset"in staticOptions);var ELEMENTS=dynamicEntry.def();dynamicEntry("if(",variable,"){",ELEMENTS,"=",variable,"._elements;",ELEMENT_STATE,".push(",ELEMENTS,");",!hasPrimitive?"":DRAW_STATE.primitive+".push("+ELEMENTS+".primType);",!hasCount?"":DRAW_STATE.count+".push("+ELEMENTS+".vertCount);",!hasOffset?"":DRAW_STATE.offset+".push("+ELEMENTS+".offset);","}else{",ELEMENT_STATE,".push(null);","}");dynamicExit(ELEMENT_STATE,".pop();","if(",variable,"){",hasPrimitive?DRAW_STATE.primitive+".pop();":"",hasCount?DRAW_STATE.count+".pop();":"",hasOffset?DRAW_STATE.offset+".pop();":"","}");break;default:check.raise("unsupported dynamic option: "+param)}});Object.keys(dynamicUniforms).forEach(function(uniform){uniformState.def(uniform);var STACK=link(uniformState.uniforms[uniform]);var VALUE=dyn(dynamicUniforms[uniform]);dynamicEntry(STACK,".push(",VALUE,");");dynamicExit(STACK,".pop();")});Object.keys(dynamicAttributes).forEach(function(attribute){attributeState.def(attribute);var ATTRIBUTE=link(attributeState.attributes[attribute]);var VALUE=dyn(dynamicAttributes[attribute]);dynamicEntry(ATTRIBUTE,".pushDyn(",VALUE,");");dynamicExit(ATTRIBUTE,".pop();")});var scope=proc("scope");var SCOPE_ARGS=scope.arg();var SCOPE_BODY=scope.arg();scope(entry);if(hasDynamic){scope(DYNARGS,"=",SCOPE_ARGS,";",dynamicEntry)}scope(SCOPE_BODY,"();",hasDynamic?dynamicExit:"",exit);var draw=proc("draw");draw(entry);if(hasDynamic){draw(DYNARGS,"=",draw.arg(),";",dynamicEntry)}var CURRENT_SHADER=stackTop(PROGRAM_STATE);draw(GL_POLL,"();","if(",CURRENT_SHADER,")",CURRENT_SHADER,".draw(",hasDynamic?DYNARGS:"",");",hasDynamic?dynamicExit:"",exit);var batch=proc("batch");batch(entry);var CUR_SHADER=batch.def(stackTop(PROGRAM_STATE));var EXEC_BATCH=link(function(program,count,args){var proc=program.batchCache[callId];if(!proc){proc=program.batchCache[callId]=compileBatch(program,dynamicOptions,dynamicUniforms,dynamicAttributes,staticOptions)}return proc(count,args)});batch("if(",CUR_SHADER,"){",GL_POLL,"();",EXEC_BATCH,"(",CUR_SHADER,",",batch.arg(),",",batch.arg(),");");Object.keys(dynamicOptions).forEach(function(option){var STATE=CONTEXT_STATE[option];if(STATE){batch(STATE,".setDirty();")}});batch("}",exit);return env.compile()}return{draw:compileShaderDraw,command:compileCommand}}},{"./check":3,"./codegen":5,"./constants/dtypes.json":8,"./constants/primitives.json":9}],7:[function(_dereq_,module,exports){module.exports={"[object Int8Array]":5120,"[object Int16Array]":5122,"[object Int32Array]":5124,"[object Uint8Array]":5121,"[object Uint8ClampedArray]":5121,"[object Uint16Array]":5123,"[object Uint32Array]":5125,"[object Float32Array]":5126,"[object Float64Array]":5121,"[object ArrayBuffer]":5121}},{}],8:[function(_dereq_,module,exports){module.exports={int8:5120,int16:5122,int32:5124,uint8:5121,uint16:5123,uint32:5125,"float":5126}},{}],9:[function(_dereq_,module,exports){module.exports={points:0,lines:1,"line loop":2,"line strip":3,triangles:4,"triangle strip":5,"triangle fan":6}},{}],10:[function(_dereq_,module,exports){var check=_dereq_("./check");function createCanvas(element,options){var canvas=document.createElement("canvas");var args=getContext(canvas,options);Object.assign(canvas.style,{border:0,margin:0,padding:0,top:0,left:0});element.appendChild(canvas);if(element===document.body){canvas.style.position="absolute";Object.assign(element.style,{margin:0,padding:0})}var scale=+args.options.pixelRatio;function resize(){var w=window.innerWidth;var h=window.innerHeight;if(element!==document.body){var bounds=element.getBoundingClientRect();w=bounds.right-bounds.left;h=bounds.top-bounds.bottom}canvas.width=scale*w;canvas.height=scale*h;Object.assign(canvas.style,{width:w+"px",height:h+"px"})}window.addEventListener("resize",resize,false);var prevDestroy=args.options.onDestroy;args.options=Object.assign({},args.options,{onDestroy:function(){window.removeEventListener("resize",resize);element.removeChild(canvas);prevDestroy&&prevDestroy()}});resize();return args}function getContext(canvas,options){var glOptions=options.glOptions||{};function get(name){try{return canvas.getContext(name,glOptions)}catch(e){return null}}var gl=get("webgl")||get("experimental-webgl")||get("webgl-experimental");check(gl,"webgl not supported");return{gl:gl,options:Object.assign({pixelRatio:window.devicePixelRatio},options)}}module.exports=function parseArgs(args){if(typeof document==="undefined"||typeof HTMLElement==="undefined"){return{gl:args[0],options:args[1]||{}}}var element=document.body;var options=args[1]||{};if(typeof args[0]==="string"){element=document.querySelector(args[0])||document.body}else if(typeof args[0]==="object"){if(args[0]instanceof HTMLElement){element=args[0]}else if(args[0]instanceof WebGLRenderingContext){return{gl:args[0],options:Object.assign({pixelRatio:1},options)}}else{options=args[0]}}if(element.nodeName&&element.nodeName.toUpperCase()==="CANVAS"){return getContext(element,options)}else{return createCanvas(element,options)}}},{"./check":3}],11:[function(_dereq_,module,exports){var GL_TRIANGLES=4;module.exports=function wrapDrawState(gl){var primitive=[GL_TRIANGLES];var count=[0];var offset=[0];var instances=[0];return{primitive:primitive,count:count,offset:offset,instances:instances}}},{}],12:[function(_dereq_,module,exports){var VARIABLE_COUNTER=0;function DynamicVariable(isFunc,data){this.id=VARIABLE_COUNTER++;this.func=isFunc;this.data=data}function defineDynamic(data,path){switch(typeof data){case"boolean":case"number":case"string":return new DynamicVariable(false,data);case"function":return new DynamicVariable(true,data);default:return defineDynamic}}function isDynamic(x){return typeof x==="function"&&!x._reglType||x instanceof DynamicVariable}function unbox(x,path){if(x instanceof DynamicVariable){return x}else if(typeof x==="function"&&x!==defineDynamic){return new DynamicVariable(true,x)}return new DynamicVariable(false,path)}module.exports={define:defineDynamic,isDynamic:isDynamic,unbox:unbox}},{}],13:[function(_dereq_,module,exports){var check=_dereq_("./check");var isTypedArray=_dereq_("./is-typed-array");var primTypes=_dereq_("./constants/primitives.json");var GL_POINTS=0;var GL_LINES=1;var GL_TRIANGLES=4;var GL_UNSIGNED_BYTE=5121;var GL_UNSIGNED_SHORT=5123;var GL_UNSIGNED_INT=5125;var GL_ELEMENT_ARRAY_BUFFER=34963;module.exports=function wrapElementsState(gl,extensionState,bufferState){var extensions=extensionState.extensions;var elements=[null];function REGLElementBuffer(){this.buffer=null;this.primType=GL_TRIANGLES;this.vertCount=0;this.type=0}function parseOptions(elements,options){var result={type:"elements"};var ext32bit=extensions.oes_element_index_uint;elements.primType=GL_TRIANGLES;elements.vertCount=0;elements.type=0;var data=null;if(!options){return result}if(typeof options==="number"){result.length=options}else{check.type(options,"object","argument to element buffer must be object");data=options.data||options}if(Array.isArray(data)){if(options.length===0){data=null}else if(Array.isArray(data[0])){var dim=data[0].length;if(dim===1)elements.primType=GL_POINTS;if(dim===2)elements.primType=GL_LINES;if(dim===3)elements.primType=GL_TRIANGLES;var i;var count=0;for(i=0;i<data.length;++i){count+=data[i].length}var flattened=ext32bit?new Uint32Array(count):new Uint16Array(count);var ptr=0;for(i=0;i<data.length;++i){var x=data[i];for(var j=0;j<x.length;++j){flattened[ptr++]=x[j]}}data=flattened}else if(ext32bit){data=new Uint32Array(data)}else{data=new Uint16Array(data)}}if(isTypedArray(data)){if(data instanceof Uint8Array||data instanceof Uint8ClampedArray){elements.type=GL_UNSIGNED_BYTE}else if(data instanceof Uint16Array){elements.type=GL_UNSIGNED_SHORT}else if(data instanceof Uint32Array){check(ext32bit,"32-bit element buffers not supported");elements.type=GL_UNSIGNED_INT}else{check.raise("invalid typed array for element buffer")}elements.vertCount=data.length;result.data=data}else{check(!data,"invalid element buffer data type")}if(typeof options==="object"){if("primitive"in options){var primitive=options.primitive;check.param(primitive,primTypes);elements.primType=primTypes[primitive]}if("usage"in options){result.usage=options.usage}if("count"in options){elements.vertCount=options.vertCount|0}}return result}Object.assign(REGLElementBuffer.prototype,{bind:function(){gl.bindBuffer(GL_ELEMENT_ARRAY_BUFFER,this.buffer._buffer.buffer)},destroy:function(){if(this.buffer){this.buffer.destroy();this.buffer=null}}});function createElements(options){var elements=new REGLElementBuffer;elements.buffer=bufferState.create(parseOptions(elements,options),GL_ELEMENT_ARRAY_BUFFER);function updateElements(options){elements.buffer(parseOptions(elements,options));return updateElements}updateElements._reglType="elements";updateElements._elements=elements;updateElements.destroy=function(){elements.destroy()};return updateElements}return{create:createElements,elements:elements,getElements:function(elements){if(elements&&elements._elements instanceof REGLElementBuffer){return elements._elements}return null}}}},{"./check":3,"./constants/primitives.json":9,"./is-typed-array":16}],14:[function(_dereq_,module,exports){module.exports=function createExtensionCache(gl){var extensions={};function refreshExtensions(){["oes_texture_float","oes_texture_float_linear","oes_texture_half_float","oes_texture_half_float_linear","oes_standard_derivatives","oes_element_index_uint","oes_fbo_render_mipmap","webgl_depth_texture","webgl_draw_buffers","webgl_color_buffer_float","ext_texture_filter_anisotropic","ext_frag_depth","ext_blend_minmax","ext_shader_texture_lod","ext_color_buffer_half_float","ext_srgb","angle_instanced_arrays","webgl_compressed_texture_s3tc","webgl_compressed_texture_atc","webgl_compressed_texture_pvrtc","webgl_compressed_texture_etc1"].forEach(function(ext){try{extensions[ext]=gl.getExtension(ext)}catch(e){}})}refreshExtensions();return{extensions:extensions,refresh:refreshExtensions}}},{}],15:[function(_dereq_,module,exports){module.exports=function wrapFBOState(gl,textureCache){function createFBO(options){}function clearCache(){}function refreshCache(){}return{create:createFBO,clear:clearCache,refresh:refreshCache,getFBO:function(wrapper){return null}}}},{}],16:[function(_dereq_,module,exports){var dtypes=_dereq_("./constants/arraytypes.json");module.exports=function(x){return Object.prototype.toString.call(x)in dtypes}},{"./constants/arraytypes.json":7}],17:[function(_dereq_,module,exports){var GL_SUBPIXEL_BITS=3408;var GL_RED_BITS=3410;var GL_GREEN_BITS=3411;var GL_BLUE_BITS=3412;var GL_ALPHA_BITS=3413;var GL_DEPTH_BITS=3414;var GL_STENCIL_BITS=3415;var GL_ALIASED_POINT_SIZE_RANGE=33901;var GL_ALIASED_LINE_WIDTH_RANGE=33902;var GL_MAX_TEXTURE_SIZE=3379;var GL_MAX_VIEWPORT_DIMS=3386;var GL_MAX_VERTEX_ATTRIBS=34921;var GL_MAX_VERTEX_UNIFORM_VECTORS=36347;var GL_MAX_VARYING_VECTORS=36348;var GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS=35661;var GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS=35660;var GL_MAX_TEXTURE_IMAGE_UNITS=34930;var GL_MAX_FRAGMENT_UNIFORM_VECTORS=36349;var GL_MAX_CUBE_MAP_TEXTURE_SIZE=34076;var GL_MAX_RENDERBUFFER_SIZE=34024;var GL_VENDOR=7936;var GL_RENDERER=7937;var GL_VERSION=7938;var GL_SHADING_LANGUAGE_VERSION=35724;module.exports=function(gl,extensions){return{colorBits:[gl.getParameter(GL_RED_BITS),gl.getParameter(GL_GREEN_BITS),gl.getParameter(GL_BLUE_BITS),gl.getParameter(GL_ALPHA_BITS)],depthBits:gl.getParameter(GL_DEPTH_BITS),stencilBits:gl.getParameter(GL_STENCIL_BITS),subpixelBits:gl.getParameter(GL_SUBPIXEL_BITS),extensions:Object.keys(extensions.extensions).filter(function(ext){return!!extensions.extensions[ext]}),pointSize:gl.getParameter(GL_ALIASED_POINT_SIZE_RANGE),lineWidth:gl.getParameter(GL_ALIASED_LINE_WIDTH_RANGE),viewport:gl.getParameter(GL_MAX_VIEWPORT_DIMS),combinedTextureUnits:gl.getParameter(GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS),cubeMapSize:gl.getParameter(GL_MAX_CUBE_MAP_TEXTURE_SIZE),renderbufferSize:gl.getParameter(GL_MAX_RENDERBUFFER_SIZE),textureUnits:gl.getParameter(GL_MAX_TEXTURE_IMAGE_UNITS),textureSize:gl.getParameter(GL_MAX_TEXTURE_SIZE),attributes:gl.getParameter(GL_MAX_VERTEX_ATTRIBS),vertexUniforms:gl.getParameter(GL_MAX_VERTEX_UNIFORM_VECTORS),vertexTextureUnits:gl.getParameter(GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS),varyingVectors:gl.getParameter(GL_MAX_VARYING_VECTORS),fragmentUniforms:gl.getParameter(GL_MAX_FRAGMENT_UNIFORM_VECTORS),glsl:gl.getParameter(GL_SHADING_LANGUAGE_VERSION),renderer:gl.getParameter(GL_RENDERER),vendor:gl.getParameter(GL_VENDOR),version:gl.getParameter(GL_VERSION)}}},{}],18:[function(_dereq_,module,exports){module.exports=loadTexture;function getExtension(url){var parts=/\.(\w+)(\?.*)?$/.exec(url);if(parts&&parts[1]){return parts[1].toLowerCase()}}function isVideoExtension(url){return["avi","asf","gifv","mov","qt","yuv","mpg","mpeg","m2v","mp4","m4p","m4v","ogg","ogv","vob","webm","wmv"].indexOf(url)>=0}function isCompressedExtension(url){return[].indexOf(url)>=0}function loadVideo(url){var video=document.createElement("video");video.autoplay=true;video.loop=true;video.src=url;return video}function loadCompressedTexture(url){var xhr=new XMLHttpRequest;xhr.responseType="arraybuffer";xhr.open("GET",url,true);xhr.send();return xhr}function loadImage(url){var image=new Image;image.src=url;return image}function loadTexture(url){if(typeof document!=="undefined"){var ext=getExtension(url);if(isVideoExtension(ext)){return loadVideo(url)}if(isCompressedExtension(ext)){return loadCompressedTexture(url)}return loadImage(url)}return null}},{}],19:[function(_dereq_,module,exports){if(typeof requestAnimationFrame==="function"&&typeof cancelAnimationFrame==="function"){module.exports={next:function(x){return requestAnimationFrame(x)},cancel:function(x){return cancelAnimationFrame(x)}}}else{module.exports={next:function(cb){setTimeout(cb,30)},cancel:clearTimeout}}},{}],20:[function(_dereq_,module,exports){var check=_dereq_("./check");var isTypedArray=_dereq_("./is-typed-array");var GL_RGBA=6408;var GL_UNSIGNED_BYTE=5121;var GL_PACK_ALIGNMENT=3333;module.exports=function wrapReadPixels(gl,glState){function readPixels(input){var options=input||{};if(isTypedArray(input)){options={data:options}}else if(arguments.length===2){options={width:arguments[0]|0,height:arguments[1]|0}}else if(typeof input!=="object"){options={}}glState.poll();var viewportState=glState.viewport;var x=options.x||0;var y=options.y||0;var width=options.width||viewportState.width;var height=options.height||viewportState.height;var size=width*height*4;var data=options.data||new Uint8Array(size);check.isTypedArray(data);check(data.byteLength>=size,"data buffer too small");gl.pixelStorei(GL_PACK_ALIGNMENT,4);gl.readPixels(x,y,width,height,GL_RGBA,GL_UNSIGNED_BYTE,data);return data}return readPixels}},{"./check":3,"./is-typed-array":16}],21:[function(_dereq_,module,exports){var check=_dereq_("./check");var DEFAULT_FRAG_SHADER="void main(){gl_FragColor=vec4(0,0,0,0);}";var DEFAULT_VERT_SHADER="void main(){gl_Position=vec4(0,0,0,0);}";var GL_FRAGMENT_SHADER=35632;var GL_VERTEX_SHADER=35633;function ActiveInfo(name,location,info){this.name=name;this.location=location;this.info=info}module.exports=function wrapShaderState(gl,extensions,attributeState,uniformState,compileShaderDraw){var shaders={};var fragShaders=[DEFAULT_FRAG_SHADER];var vertShaders=[DEFAULT_VERT_SHADER];function getShader(type,source){var cache=shaders[type];var shader=cache[source];if(!shader){shader=gl.createShader(type);gl.shaderSource(shader,source);gl.compileShader(shader);if(!gl.getShaderParameter(shader,gl.COMPILE_STATUS)){var errLog=gl.getShaderInfoLog(shader);check.raise("Error compiling shader:\n"+errLog)}cache[source]=shader}return shader}function refreshShaders(){shaders[GL_FRAGMENT_SHADER]={};shaders[GL_VERTEX_SHADER]={}}function clearShaders(){Object.keys(shaders).forEach(function(type){Object.keys(shaders[type]).forEach(function(shader){gl.deleteShader(shaders[type][shader])})});shaders[GL_FRAGMENT_SHADER]={};shaders[GL_VERTEX_SHADER]={}}var programCache={};var programList=[];function REGLProgram(fragSrc,vertSrc){this.fragSrc=fragSrc;this.vertSrc=vertSrc;this.program=null;this.uniforms=[];this.attributes=[];this.draw=function(){};this.batchCache={}}Object.assign(REGLProgram.prototype,{link:function(){var i,info;var fragShader=getShader(gl.FRAGMENT_SHADER,this.fragSrc);var vertShader=getShader(gl.VERTEX_SHADER,this.vertSrc);var program=this.program=gl.createProgram();gl.attachShader(program,fragShader);gl.attachShader(program,vertShader);gl.linkProgram(program);if(!gl.getProgramParameter(program,gl.LINK_STATUS)){var errLog=gl.getProgramInfoLog(program);check.raise("Error linking program:\n"+errLog)}var numUniforms=gl.getProgramParameter(program,gl.ACTIVE_UNIFORMS);var uniforms=this.uniforms=[];for(i=0;i<numUniforms;++i){info=gl.getActiveUniform(program,i);if(info){if(info.size>1){for(var j=0;j<info.size;++j){var name=info.name.replace("[0]","["+j+"]");uniforms.push(new ActiveInfo(name,gl.getUniformLocation(program,name),info));uniformState.def(name)}}else{uniforms.push(new ActiveInfo(info.name,gl.getUniformLocation(program,info.name),info));uniformState.def(info.name)}}}var numAttributes=gl.getProgramParameter(program,gl.ACTIVE_ATTRIBUTES);var attributes=this.attributes=[];for(i=0;i<numAttributes;++i){info=gl.getActiveAttrib(program,i);if(info){attributes.push(new ActiveInfo(info.name,gl.getAttribLocation(program,info.name),info));attributeState.def(info.name)}}this.draw=compileShaderDraw(this);this.batchCache={}},destroy:function(){gl.deleteProgram(this.program)}});function getProgram(vertSource,fragSource){var cache=programCache[fragSource];if(!cache){cache=programCache[vertSource]={}}var program=cache[vertSource];if(!program){program=new REGLProgram(fragSource,vertSource);program.link();cache[vertSource]=program;programList.push(program)}return program}function clearPrograms(){programList.forEach(function(program){program.destroy()});programList.length=0;programCache={}}function refreshPrograms(){programList.forEach(function(program){program.link()})}var programState=[null];function clear(){clearShaders();clearPrograms()}function refresh(){refreshShaders();refreshPrograms()}clear();return{create:getProgram,clear:clear,refresh:refresh,programs:programState,fragShaders:fragShaders,vertShaders:vertShaders}}},{"./check":3}],22:[function(_dereq_,module,exports){module.exports=function createStack(init,onChange){var n=init.length;var stack=init.slice();var dirty=true;function poll(){var ptr=stack.length-n;if(dirty){switch(n){case 1:onChange(stack[ptr]);break;case 2:onChange(stack[ptr],stack[ptr+1]);break;case 3:onChange(stack[ptr],stack[ptr+1],stack[ptr+2]);break;case 4:onChange(stack[ptr],stack[ptr+1],stack[ptr+2],stack[ptr+3]);break;case 5:onChange(stack[ptr],stack[ptr+1],stack[ptr+2],stack[ptr+3],stack[ptr+4]);break;case 6:onChange(stack[ptr],stack[ptr+1],stack[ptr+2],stack[ptr+3],stack[ptr+4],stack[ptr+5]);break;default:onChange.apply(null,stack.slice(ptr,stack.length))}dirty=false}}return{push:function(){for(var i=0;i<n;++i){stack.push(arguments[i])}dirty=true},pop:function(){stack.length-=n;dirty=true},poll:poll,setDirty:function(){dirty=true}}}},{}],23:[function(_dereq_,module,exports){var createStack=_dereq_("./stack");var createEnvironment=_dereq_("./codegen");var GL_CULL_FACE=2884;var GL_BLEND=3042;var GL_DITHER=3024;var GL_STENCIL_TEST=2960;var GL_DEPTH_TEST=2929;var GL_SCISSOR_TEST=3089;var GL_POLYGON_OFFSET_FILL=32823;var GL_SAMPLE_ALPHA_TO_COVERAGE=32926;var GL_SAMPLE_COVERAGE=32928;var GL_FUNC_ADD=32774;var GL_ZERO=0;var GL_ONE=1;var GL_FRONT=1028;var GL_BACK=1029;var GL_LESS=513;var GL_CCW=2305;var GL_ALWAYS=519;var GL_KEEP=7680;module.exports=function wrapContextState(gl,shaderState){function capStack(cap,dflt){var result=createStack([!!dflt],function(flag){if(flag){gl.enable(cap)}else{gl.disable(cap)}});result.flag=cap;return result}var viewportState={width:0,height:0};var contextState={dither:capStack(GL_DITHER),"blend.enable":capStack(GL_BLEND),"blend.color":createStack([0,0,0,0],function(r,g,b,a){gl.blendColor(r,g,b,a)}),"blend.equation":createStack([GL_FUNC_ADD,GL_FUNC_ADD],function(rgb,a){gl.blendEquationSeparate(rgb,a)}),"blend.func":createStack([GL_ONE,GL_ZERO,GL_ONE,GL_ZERO],function(srcRGB,dstRGB,srcAlpha,dstAlpha){gl.blendFuncSeparate(srcRGB,dstRGB,srcAlpha,dstAlpha)}),"depth.enable":capStack(GL_DEPTH_TEST,true),"depth.func":createStack([GL_LESS],function(func){gl.depthFunc(func)}),"depth.range":createStack([0,1],function(near,far){gl.depthRange(near,far)}),"depth.mask":createStack([true],function(m){gl.depthMask(m)}),"cull.enable":capStack(GL_CULL_FACE),"cull.face":createStack([GL_BACK],function(mode){gl.cullFace(mode)}),frontFace:createStack([GL_CCW],function(mode){gl.frontFace(mode)}),colorMask:createStack([true,true,true,true],function(r,g,b,a){gl.colorMask(r,g,b,a)}),lineWidth:createStack([1],function(w){gl.lineWidth(w)}),"polygonOffset.enable":capStack(GL_POLYGON_OFFSET_FILL),"polygonOffset.offset":createStack([0,0],function(factor,units){gl.polygonOffset(factor,units)}),"sample.alpha":capStack(GL_SAMPLE_ALPHA_TO_COVERAGE),"sample.enable":capStack(GL_SAMPLE_COVERAGE),"sample.coverage":createStack([1,false],function(value,invert){gl.sampleCoverage(value,invert)}),"stencil.enable":capStack(GL_STENCIL_TEST),"stencil.mask":createStack([-1],function(mask){gl.stencilMask(mask)}),"stencil.func":createStack([GL_ALWAYS,0,-1],function(func,ref,mask){gl.stencilFunc(func,ref,mask)}),"stencil.opFront":createStack([GL_KEEP,GL_KEEP,GL_KEEP],function(fail,zfail,pass){gl.stencilOpSeparate(GL_FRONT,fail,zfail,pass)}),"stencil.opBack":createStack([GL_KEEP,GL_KEEP,GL_KEEP],function(fail,zfail,pass){gl.stencilOpSeparate(GL_BACK,fail,zfail,pass)}),"scissor.enable":capStack(GL_SCISSOR_TEST),"scissor.box":createStack([0,0,-1,-1],function(x,y,w,h){var w_=w;if(w<0){w_=gl.drawingBufferWidth-x}var h_=h;if(h<0){h_=gl.drawingBufferHeight-y}gl.scissor(x,y,w_,h_)}),viewport:createStack([0,0,-1,-1],function(x,y,w,h){var w_=w;if(w<0){w_=gl.drawingBufferWidth-x}var h_=h;if(h<0){h_=gl.drawingBufferHeight-y}gl.viewport(x,y,w_,h_);viewportState.width=w_;viewportState.height=h_})};var env=createEnvironment();var poll=env.proc("poll");var refresh=env.proc("refresh");Object.keys(contextState).forEach(function(prop){var STACK=env.link(contextState[prop]);poll(STACK,".poll();");refresh(STACK,".setDirty();")});var procs=env.compile();return{contextState:contextState,viewport:viewportState,poll:procs.poll,refresh:procs.refresh,notifyViewportChanged:function(){contextState.viewport.setDirty();contextState["scissor.box"].setDirty()}}}},{"./codegen":5,"./stack":22}],24:[function(_dereq_,module,exports){var check=_dereq_("./check");var isTypedArray=_dereq_("./is-typed-array");var loadTexture=_dereq_("./load-texture");var GL_TEXTURE_2D=3553;var GL_TEXTURE_CUBE_MAP_POSITIVE_X=34069;var GL_RGBA=6408;var GL_ALPHA=6406;var GL_RGB=6407;var GL_LUMINANCE=6409;var GL_LUMINANCE_ALPHA=6410;var GL_RGBA4=32854;var GL_RGB5_A1=32855;var GL_RGB565=36194;var GL_UNSIGNED_SHORT_4_4_4_4=32819;var GL_UNSIGNED_SHORT_5_5_5_1=32820;var GL_UNSIGNED_SHORT_5_6_5=33635;var GL_UNSIGNED_INT_24_8_WEBGL=34042;var GL_DEPTH_COMPONENT=6402;var GL_DEPTH_STENCIL=34041;var GL_SRGB_EXT=35904;var GL_SRGB_ALPHA_EXT=35906;var GL_HALF_FLOAT_OES=36193;var GL_COMPRESSED_RGB_S3TC_DXT1_EXT=33776;var GL_COMPRESSED_RGBA_S3TC_DXT1_EXT=33777;var GL_COMPRESSED_RGBA_S3TC_DXT3_EXT=33778;var GL_COMPRESSED_RGBA_S3TC_DXT5_EXT=33779;var GL_COMPRESSED_RGB_ATC_WEBGL=35986;var GL_COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL=35987;var GL_COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL=34798;var GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG=35840;var GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG=35841;var GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG=35842;var GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG=35843;var GL_COMPRESSED_RGB_ETC1_WEBGL=36196;var GL_UNSIGNED_BYTE=5121;var GL_UNSIGNED_SHORT=5123;var GL_UNSIGNED_INT=5125;var GL_FLOAT=5126;var GL_TEXTURE_WRAP_S=10242;var GL_TEXTURE_WRAP_T=10243;var GL_REPEAT=10497;var GL_CLAMP_TO_EDGE=33071;var GL_MIRRORED_REPEAT=33648;var GL_TEXTURE_MAG_FILTER=10240;var GL_TEXTURE_MIN_FILTER=10241;var GL_NEAREST=9728;var GL_LINEAR=9729;var GL_NEAREST_MIPMAP_NEAREST=9984;var GL_LINEAR_MIPMAP_NEAREST=9985;var GL_NEAREST_MIPMAP_LINEAR=9986;var GL_LINEAR_MIPMAP_LINEAR=9987;var GL_TEXTURE_MAX_ANISOTROPY_EXT=34046;var GL_UNPACK_ALIGNMENT=3317;var GL_UNPACK_FLIP_Y_WEBGL=37440;var GL_UNPACK_PREMULTIPLY_ALPHA_WEBGL=37441;var GL_UNPACK_COLORSPACE_CONVERSION_WEBGL=37443;var GL_BROWSER_DEFAULT_WEBGL=37444;var GL_TEXTURE0=33984;var wrapModes={repeat:GL_REPEAT,clamp:GL_CLAMP_TO_EDGE,mirror:GL_MIRRORED_REPEAT};var magFilters={nearest:GL_NEAREST,linear:GL_LINEAR};var minFilters=Object.assign({
"nearest mipmap nearest":GL_NEAREST_MIPMAP_NEAREST,"linear mipmap nearest":GL_LINEAR_MIPMAP_NEAREST,"nearest mipmap linear":GL_NEAREST_MIPMAP_LINEAR,"linear mipmap linear":GL_LINEAR_MIPMAP_LINEAR,mipmap:GL_LINEAR_MIPMAP_LINEAR},magFilters);function isPow2(v){return!(v&v-1)&&!!v}function isNumericArray(arr){return Array.isArray(arr)&&(arr.length===0||typeof arr[0]==="number")}function isNDArrayLike(obj){return typeof obj==="object"&&Array.isArray(obj.shape)&&Array.isArray(obj.stride)&&typeof obj.offset==="number"&&obj.shape.length===obj.stride.length&&(Array.isArray(obj.data)||isTypedArray(obj.data))}function isRectArray(arr){if(!Array.isArray(arr)){return false}var width=arr.length;if(width===0||!Array.isArray(arr[0])){return false}var height=arr[0].length;for(var i=1;i<width;++i){if(!Array.isArray(arr[i])||arr[i].length!==height){return false}}return true}function classString(x){return Object.prototype.toString.call(x)}function isCanvasElement(object){return classString(object)==="[object HTMLCanvasElement]"}function isContext2D(object){return classString(object)==="[object CanvasRenderingContext2D]"}function isImageElement(object){return classString(object)==="[object HTMLImageElement]"}function isVideoElement(object){return classString(object)==="[object HTMLVideoElement]"}function isPendingXHR(object){return classString(object)==="[object XMLHttpRequest]"}function isPixelData(object){return typeof object==="string"||isTypedArray(object)||isNumericArray(object)||isNDArrayLike(object)||isCanvasElement(object)||isContext2D(object)||isImageElement(object)||isVideoElement(object)||isRectArray(object)}function convertToHalfFloat(array){var floats=new Float32Array(array);var uints=new Uint32Array(floats.buffer);var ushorts=new Uint16Array(array.length);for(var i=0;i<array.length;++i){if(isNaN(array[i])){ushorts[i]=65535}else if(array[i]===Infinity){ushorts[i]=31744}else if(array[i]===-Infinity){ushorts[i]=64512}else{var x=uints[i];var sgn=x>>>31<<15;var exp=(x<<1>>>24)-127;var frac=x>>13&(1<<10)-1;if(exp<-24){ushorts[i]=sgn}else if(exp<-14){var s=-14-exp;ushorts[i]=sgn+(frac+(1<<10)>>s)}else if(exp>15){ushorts[i]=sgn+31744}else{ushorts[i]=sgn+(exp+15<<10)+frac}}}return ushorts}function transposePixels(data,nx,ny,nc,sx,sy,sc,off){var result=new data.constructor(nx*ny*nc);var ptr=0;for(var i=0;i<ny;++i){for(var j=0;j<nx;++j){for(var k=0;k<nc;++k){result[ptr++]=data[sy*i+sx*j+sc*k+off]}}}return result}module.exports=function createTextureSet(gl,extensionState,limits,reglPoll,viewport){var extensions=extensionState.extensions;var colorSpace={none:0,browser:GL_BROWSER_DEFAULT_WEBGL};var textureTypes={uint8:GL_UNSIGNED_BYTE,rgba4:GL_UNSIGNED_SHORT_4_4_4_4,rgb565:GL_UNSIGNED_SHORT_5_6_5,"rgb5 a1":GL_UNSIGNED_SHORT_5_5_5_1};var textureFormats={alpha:GL_ALPHA,luminance:GL_LUMINANCE,"luminance alpha":GL_LUMINANCE_ALPHA,rgb:GL_RGB,rgba:GL_RGBA,rgba4:GL_RGBA4,"rgb5 a1":GL_RGB5_A1,rgb565:GL_RGB565};var compressedTextureFormats={};if(extensions.ext_srgb){textureFormats.srgb=GL_SRGB_EXT;textureFormats.srgba=GL_SRGB_ALPHA_EXT}if(extensions.oes_texture_float){textureTypes.float=GL_FLOAT}if(extensions.oes_texture_half_float){textureTypes["half float"]=GL_HALF_FLOAT_OES}if(extensions.webgl_depth_texture){Object.assign(textureFormats,{depth:GL_DEPTH_COMPONENT,"depth stencil":GL_DEPTH_STENCIL});Object.assign(textureTypes,{uint16:GL_UNSIGNED_SHORT,uint32:GL_UNSIGNED_INT,"depth stencil":GL_UNSIGNED_INT_24_8_WEBGL})}if(extensions.webgl_compressed_texture_s3tc){Object.assign(compressedTextureFormats,{"rgb s3tc dxt1":GL_COMPRESSED_RGB_S3TC_DXT1_EXT,"rgba s3tc dxt1":GL_COMPRESSED_RGBA_S3TC_DXT1_EXT,"rgba s3tc dxt3":GL_COMPRESSED_RGBA_S3TC_DXT3_EXT,"rgba s3tc dxt5":GL_COMPRESSED_RGBA_S3TC_DXT5_EXT})}if(extensions.webgl_compressed_texture_atc){Object.assign(compressedTextureFormats,{"rgb arc":GL_COMPRESSED_RGB_ATC_WEBGL,"rgba atc explicit alpha":GL_COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL,"rgba atc interpolated alpha":GL_COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL})}if(extensions.webgl_compressed_texture_pvrtc){Object.assign(compressedTextureFormats,{"rgb pvrtc 4bppv1":GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG,"rgb pvrtc 2bppv1":GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG,"rgba pvrtc 4bppv1":GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG,"rgba pvrtc 2bppv1":GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG})}if(extensions.webgl_compressed_texture_etc1){compressedTextureFormats["rgb etc1"]=GL_COMPRESSED_RGB_ETC1_WEBGL}Object.assign(textureFormats,compressedTextureFormats);var supportedFormats=Object.keys(textureFormats);limits.textureFormats=supportedFormats;var colorFormats=supportedFormats.reduce(function(color,key){var glenum=textureFormats[key];if(glenum===GL_LUMINANCE||glenum===GL_ALPHA||glenum===GL_LUMINANCE||glenum===GL_LUMINANCE_ALPHA||glenum===GL_DEPTH_COMPONENT||glenum===GL_DEPTH_STENCIL){color[glenum]=glenum}else if(glenum===GL_RGB5_A1||key.indexOf("rgba")>=0){color[glenum]=GL_RGBA}else{color[glenum]=GL_RGB}return color},{});var compressedFormatEnums=Object.keys(compressedTextureFormats).map(function(key){return compressedTextureFormats[key]});function parsePixelStorage(options,defaults,result){if(defaults){result.flipY=defaults.flipY;result.premultiplyAlpha=defaults.premultiplyAlpha;result.unpackAlignment=defaults.unpackAlignment;result.colorSpace=defaults.colorSpace}if("premultiplyAlpha"in options){check.type(options.premultiplyAlpha,"boolean","invalid premultiplyAlpha");result.premultiplyAlpha=options.premultiplyAlpha}if("flipY"in options){check.type(options.flipY,"boolean","invalid texture flip");result.flipY=options.flipY}if("alignment"in options){check.oneOf(options.alignment,[1,2,4,8],"invalid texture unpack alignment");result.unpackAlignment=options.alignment}if("colorSpace"in options){check.parameter(options.colorSpace,colorSpace,"invalid colorSpace");result.colorSpace=colorSpace[options.colorSpace]}return result}function parseTexParams(options,defaults){var result={width:0,height:0,channels:0,format:0,type:0,wrapS:GL_CLAMP_TO_EDGE,wrapT:GL_CLAMP_TO_EDGE,minFilter:GL_NEAREST,magFilter:GL_NEAREST,genMipmaps:false,anisoSamples:1,flipY:false,premultiplyAlpha:false,unpackAlignment:1,colorSpace:GL_BROWSER_DEFAULT_WEBGL,poll:false,needsListeners:false};if(defaults){Object.assign(result,defaults);parsePixelStorage(options,defaults,result)}else{parsePixelStorage(options,null,result)}if("shape"in options){check(Array.isArray(options.shape)&&options.shape.length>=2,"shape must be an array");result.width=options.shape[0]|0;result.height=options.shape[1]|0;if(options.shape.length===3){result.channels=options.shape[2]|0}}else{if("radius"in options){result.width=result.height=options.radius|0}if("width"in options){result.width=options.width|0}if("height"in options){result.height=options.height|0}if("channels"in options){result.channels=options.channels|0}}if("min"in options){check.parameter(options.min,minFilters);result.minFilter=minFilters[options.min]}if("mag"in options){check.parameter(options.mag,magFilters);result.magFilter=magFilters[options.mag]}if("wrap"in options){var wrap=options.wrap;if(typeof wrap==="string"){check.parameter(wrap,wrapModes);result.wrapS=result.wrapT=wrapModes[wrap]}else if(Array.isArray(wrap)){check.parameter(wrap[0],wrapModes);check.parameter(wrap[1],wrapModes);result.wrapS=wrapModes[wrap[0]];result.wrapT=wrapModes[wrap[1]]}}else{if("wrapS"in options){check.parameter(options.wrapS,wrapModes);result.wrapS=wrapModes[options.wrapS]}if("wrapT"in options){check.parameter(options.wrapT,wrapModes);result.wrapT=wrapModes[options.wrapT]}}if("aniso"in options){check.type(options.aniso,"number","number of aniso samples must be a number");result.aniso=+options.aniso}if("mipmap"in options){result.genMipmaps=!!options.mipmap}else if([GL_NEAREST_MIPMAP_NEAREST,GL_NEAREST_MIPMAP_LINEAR,GL_LINEAR_MIPMAP_NEAREST,GL_LINEAR_MIPMAP_LINEAR].indexOf(result.minFilter)>=0){result.genMipmaps=true}if("format"in options){check.parameter(options.format,textureFormats,"invalid texture format");result.format=textureFormats[options.format];if(options.format in textureTypes){result.type=textureTypes[options.format]}}if("type"in options){check.parameter(options.type,textureTypes,"invalid texture type");result.type=textureTypes[options.type]}return result}function parseMipImage(image,texParams){var defaults=texParams;if(image){if(Array.isArray(image.mipmap)){defaults=parseTexParams(image,texParams);return{mipmap:image.mipmap.map(function(level,i){return parsePixelData(level,texParams.width>>i,texParams.height>>i,i)})}}else{return{pixels:parsePixelData(image,texParams.width,texParams.height,0)}}}else{return{}}function parsePixelData(inPixelData,width,height,miplevel){var pixelData=inPixelData;if(typeof inPixelData!=="object"||!inPixelData){pixelData={data:inPixelData}}var result=parsePixelStorage(pixelData,defaults,{width:0,height:0,miplevel:miplevel,channels:defaults.channels,format:defaults.format,internalformat:0,type:defaults.type,copy:false,x:0,y:0,image:null,canvas:null,video:null,data:null,array:null,needsConvert:false,needsTranspose:false,needsListeners:false,strideX:0,strideY:0,strideC:0,offset:0,flipY:defaults.flipY,premultiplyAlpha:defaults.premultiplyAlpha,unpackAlignment:defaults.unpackAlignment,colorSpace:defaults.colorSpace,poll:false});if(!inPixelData){return result}function setObjectProps(){if("shape"in pixelData){var shape=pixelData.shape;check(Array.isArray(shape)&&shape.length>=2,"image shape must be an array");result.width=shape[0]|0;result.height=shape[1]|0;if(shape.length===3){result.channels=shape[2]|0}}else{if("width"in pixelData){result.width=pixelData.width}else{result.width=width}if("height"in pixelData){result.height=pixelData.height}else{result.height=height}if("channels"in pixelData){result.channels=pixelData.channels}}if("stride"in pixelData){var stride=pixelData.stride;check(Array.isArray(stride)&&stride.length>=2,"invalid stride vector");result.strideX=stride[0];result.strideY=stride[1];if(stride.length===3){result.strideC=stride[2]}else{result.strideC=1}result.needsTranspose=true}else{result.strideC=1;result.strideX=result.strideC*result.channels;result.strideY=result.strideX*result.width}if("offset"in pixelData){result.offset=pixelData.offset|0;result.needsTranspose=true}if("format"in pixelData){var format=pixelData.format;check.parameter(format,textureFormats);result.format=textureFormats[format];if(format in textureTypes){result.type=textureTypes[format]}}if("type"in pixelData){var type=pixelData.type;check.parameter(type,textureTypes);result.type=textureTypes[type]}else if(result.data instanceof Float32Array){result.type=GL_FLOAT}}function setDefaultProps(){result.type=GL_UNSIGNED_BYTE;result.format=GL_RGBA;result.channels=4}var data=pixelData;if(isPixelData(pixelData.data)){data=pixelData.data}if(typeof data==="string"){data=loadTexture(data)}if(isTypedArray(data)){result.data=data;setObjectProps()}else if(isNumericArray(data)){result.array=data;result.needsConvert=true;setObjectProps()}else if(isNDArrayLike(data)){if(Array.isArray(data.data)){result.array=data.data;result.needsConvert=true}else{result.data=data}setObjectProps();var shape=data.shape;result.width=shape[0];result.height=shape[1];if(shape.length===3){result.channels=shape[2]}else{result.channels=1}var stride=data.stride;result.strideX=data.stride[0];result.strideY=data.stride[1];if(stride.length===3){result.strideC=data.stride[2]}else{result.strideC=1}result.offset=data.offset;result.needsTranspose=true}else if(isCanvasElement(data)||isContext2D(data)){if(isCanvasElement(data)){result.canvas=data}else{result.canvas=data.canvas}result.width=result.width||result.canvas.width;result.height=result.height||result.canvas.height;setDefaultProps()}else if(isImageElement(data)){result.image=data;result.width=result.width||data.naturalWidth;result.height=result.height||data.naturalHeight;if(!image.complete){result.needsListeners=true}setDefaultProps();if("poll"in pixelData){result.poll=!!pixelData.poll}}else if(isVideoElement(data)){result.video=data;result.width=result.width||data.width;result.height=result.height||data.height;result.poll=true;setDefaultProps();if("poll"in pixelData){result.poll=!!pixelData.poll}}else if(isPendingXHR(data)){}else if(isRectArray(data)){var w=data.length;var h=data[0].length;var c=1;var pixels,i,j,k,p;if(Array.isArray(data[0][0])){c=data[0][0].length;check(c>=0&&c<=4,"invalid number of channels for image data");pixels=Array(w*h*c);p=0;for(i=0;i<w;++i){for(j=0;j<h;++j){for(k=0;k<c;++k){pixels[p++]=data[i][j][k]}}}}else{pixels=Array(w*h);p=0;for(i=0;i<w;++i){for(j=0;j<h;++j){pixels[p++]=data[i][j]}}}result.width=w;result.height=h;result.channels=c;result.array=pixels;result.needsConvert=true}else if(pixelData.copy){result.copy=true;result.x=pixelData.x|0;result.y=pixelData.y|0;result.width=(pixelData.width||viewport.width)|0;result.height=(pixelData.height||viewport.height)|0;setDefaultProps()}if(!result.type&&result.data){if(result.format===GL_DEPTH_COMPONENT){if(result.data instanceof Uint16Array){result.type=GL_UNSIGNED_SHORT}else if(result.data instanceof Uint32Array){result.type=GL_UNSIGNED_INT}}else if(result.data instanceof Float32Array){result.type=GL_FLOAT}}function reconcile(param){if(result[param]){texParams[param]=texParams[param]||result[param];check(result[param]===texParams[param],"incompatible image param: "+param)}else{result[param]=texParams[param]}}reconcile("type");reconcile("format");reconcile("channels");texParams.poll=texParams.poll||result.poll;texParams.needsListeners=texParams.needsListeners||result.needsListeners;texParams.width=texParams.width||result.width<<miplevel;texParams.height=texParams.height||result.height<<miplevel;return result}}function fillMissingTexParams(params){if(!params.format){params.channels=params.channels||4;switch(params.channels){case 1:params.format=GL_LUMINANCE;break;case 2:params.format=GL_LUMINANCE_ALPHA;break;case 3:params.format=GL_RGB;break;default:params.format=GL_RGBA;break}}var format=params.format;if(format===GL_DEPTH_COMPONENT||format===GL_DEPTH_STENCIL){check(extensions.webgl_depth_texture,"depth/stencil texture not supported");if(format===GL_DEPTH_COMPONENT){check(params.type===GL_UNSIGNED_SHORT||GL_UNSIGNED_INT,"depth texture type must be uint16 or uint32")}if(format===GL_DEPTH_STENCIL){check(params.type===GL_UNSIGNED_INT_24_8_WEBGL,"depth stencil texture format must match type")}}params.internalformat=format;params.format=colorFormats[format];if(!params.channels){switch(params.format){case GL_LUMINANCE:case GL_ALPHA:case GL_DEPTH_COMPONENT:params.channels=1;break;case GL_DEPTH_STENCIL:case GL_LUMINANCE_ALPHA:params.channels=2;break;case GL_RGB:params.channels=3;break;default:params.channels=4}}params.type=params.type||GL_UNSIGNED_BYTE;if(params.type===GL_FLOAT){check(extensions.oes_texture_float,"float texture not supported")}else if(params.type===GL_HALF_FLOAT_OES){check(extensions.oes_texture_half_float,"half float texture not supported")}if(params.type===GL_FLOAT&&!extensions.oes_texture_float_linear||params.type===GL_HALF_FLOAT_OES&&!extensions.oes_texture_half_float_linear){params.magFilter=GL_NEAREST;if(params.minFilter===GL_LINEAR){params.minFilter=GL_NEAREST}else if(params.minFilter===GL_LINEAR_MIPMAP_LINEAR||params.minFilter===GL_LINEAR_MIPMAP_NEAREST||params.minFilter===GL_NEAREST_MIPMAP_LINEAR){params.minFilter=GL_NEAREST_MIPMAP_NEAREST}}params.width=params.width||0;params.height=params.height||0;params.compressed=compressedFormatEnums.indexOf(params.internalformat)>=0;if(params.genMipmaps){check(params.width===params.height&&isPow2(params.width),"must be a square power of 2 to support mipmaps");check(!params.compressed,"mipmap generation not supported for compressed textures")}}function fillMissingImageParams(image,texParams){if(image.mipmap){for(var i=0;i<image.mipmap.length;++i){fillMissingPixelParams(image.mipmap[i],texParams.width>>>i,texParams.height>>>i)}}else if(image.pixels){fillMissingPixelParams(image.pixels,texParams.width,texParams.height)}function fillMissingPixelParams(pixels,w,h){function checkProp(prop,expected){if(pixels[prop]){check(pixels[prop]===expected,"invalid "+prop)}pixels[prop]=expected}checkProp("width",w);checkProp("height",h);checkProp("channels",texParams.channels);checkProp("format",texParams.internalformat);checkProp("type",texParams.type);pixels.format=texParams.format;pixels.internalformat=texParams.internalformat;if(pixels.needsConvert){switch(pixels.type){case GL_UNSIGNED_BYTE:pixels.data=new Uint8Array(pixels.array);break;case GL_UNSIGNED_SHORT:pixels.data=new Uint16Array(pixels.array);break;case GL_UNSIGNED_INT:pixels.data=new Uint32Array(pixels.array);break;case GL_FLOAT:pixels.data=new Float32Array(pixels.array);break;case GL_HALF_FLOAT_OES:pixels.data=convertToHalfFloat(pixels.array);break;case GL_UNSIGNED_SHORT_5_6_5:case GL_UNSIGNED_SHORT_5_5_5_1:case GL_UNSIGNED_SHORT_4_4_4_4:case GL_UNSIGNED_INT_24_8_WEBGL:check.raise("unsupported format for automatic conversion");break;default:check.raise("unsupported type conversion")}pixels.needsConvert=false;pixels.array=null}if(pixels.needsTranspose){pixels.data=transposePixels(pixels.data,pixels.width,pixels.height,pixels.channels,pixels.strideX,pixels.strideY,pixels.strideC,pixels.offset)}if(pixels.data){switch(pixels.type){case GL_UNSIGNED_BYTE:check(pixels.data instanceof Uint8Array||pixels.data instanceof Uint8ClampedArray,"incompatible pixel type");break;case GL_UNSIGNED_SHORT_5_6_5:case GL_UNSIGNED_SHORT_5_5_5_1:case GL_UNSIGNED_SHORT_4_4_4_4:case GL_UNSIGNED_SHORT:case GL_HALF_FLOAT_OES:check(pixels.data instanceof Uint16Array,"incompatible pixel type");break;case GL_UNSIGNED_INT:check(pixels.data instanceof Uint32Array,"incompatible pixel type");break;case GL_FLOAT:check(pixels.data instanceof Float32Array,"incompatible pixel type");break;default:check.raise("bad or missing pixel type")}}}}function parseTexture2D(object){var params=parseTexParams(object);var image=parseMipImage(object,params);fillMissingTexParams(params);fillMissingImageParams(image,params);return{params:params,image:image}}function checkDims(target,data){if(target===GL_TEXTURE_2D){check(data.params.width<=limits.textureSize&&data.params.height<=limits.textureSize,"2d texture is too large")}else{check(data.params.width===data.params.height&&data.params.width<=limits.cubeMapSize&&data.params.height<=limits.cubeMapSize,"invalid dimensions for cube map")}}function parseCube(object){var faces;if(Array.isArray(object)){faces=object}else if("faces"in object){faces=object.faces}else{faces=[{},{},{},{},{},{}]}check(Array.isArray(faces)&&faces.length===6,"invalid faces for cubemap");var params=parseTexParams(object);var parsedFaces=faces.map(function(face){return parseMipImage(face,params)});fillMissingTexParams(params);for(var i=0;i<6;++i){fillMissingImageParams(parsedFaces[i],params)}return{params:params,faces:parsedFaces}}var activeTexture=0;var textureCount=0;var textureSet={};var pollSet=[];var numTexUnits=limits.textureUnits;var textureUnits=Array(numTexUnits).map(function(){return null});function REGLTexture(target,texture){this.id=textureCount++;this.target=target;this.texture=texture;this.pollId=-1;this.unit=-1;this.bindCount=0;this.cancelPending=null;this.data=null}function setTexPixels(target,image){gl.pixelStorei(GL_UNPACK_FLIP_Y_WEBGL,image.flipY);gl.pixelStorei(GL_UNPACK_PREMULTIPLY_ALPHA_WEBGL,image.premultiplyAlpha);gl.pixelStorei(GL_UNPACK_COLORSPACE_CONVERSION_WEBGL,image.colorSpace);gl.pixelStorei(GL_UNPACK_ALIGNMENT,image.unpackAlignment);var element=image.image||image.video||image.canvas;var internalformat=image.internalformat;var format=image.format;var type=image.type;var width=image.width;var height=image.height;var lod=image.miplevel;if(isCanvasElement(element)||isImageElement(element)&&element.complete||isVideoElement(element)&&element.readyState>2){gl.texImage2D(target,lod,format,format,type,element)}else if(image.compressed){gl.compressedTexImage2D(target,lod,internalformat,width,height,0,image.data)}else if(image.copy){reglPoll();gl.copyTexImage2D(target,lod,format,image.x,image.y,width,height,0)}else if(image.data){gl.texImage2D(target,lod,format,width,height,0,format,type,image.data)}else{gl.texImage2D(target,lod,format,width||1,height||1,0,format,type,null)}}function setTexImage(target,image){var mipmap=image.mipmap;if(Array.isArray(mipmap)){for(var i=0;i<mipmap.length;++i){setTexPixels(target,mipmap[i])}}else{setTexPixels(target,image.pixels)}}function clearPoll(texture){var id=texture.pollId;if(id>=0){var other=pollSet[id]=pollSet[pollSet.length-1];other.id=id;pollSet.pop();texture.pollId=-1}}Object.assign(REGLTexture.prototype,{bind:function(){this.bindCount+=1;var unit=this.unit;if(unit<0){for(var i=0;i<numTexUnits;++i){var other=textureUnits[i];if(!other||other.bindCount<=0){if(other){other.unit=-1}textureUnits[i]=this;unit=i;break}}this.unit=unit;gl.activeTexture(GL_TEXTURE0+unit);gl.bindTexture(this.target,this.texture);activeTexture=unit}return unit},unbind:function(){this.bindCount-=1},refresh:function(){var target=this.target;var unit=this.unit;if(unit>=0){gl.activeTexture(GL_TEXTURE0+unit);activeTexture=unit}else{gl.bindTexture(target,this.texture)}var data=this.data;if(target===GL_TEXTURE_2D){setTexImage(GL_TEXTURE_2D,data.image)}else{for(var i=0;i<6;++i){setTexImage(GL_TEXTURE_CUBE_MAP_POSITIVE_X+i,data.faces[i])}}var params=data.params;if(params.genMipmaps){gl.generateMipmap(target)}gl.texParameteri(target,GL_TEXTURE_MIN_FILTER,params.minFilter);gl.texParameteri(target,GL_TEXTURE_MAG_FILTER,params.magFilter);gl.texParameteri(target,GL_TEXTURE_WRAP_S,params.wrapS);gl.texParameteri(target,GL_TEXTURE_WRAP_T,params.wrapT);if(extensions.ext_texture_filter_anisotropic){gl.texParameteri(target,GL_TEXTURE_MAX_ANISOTROPY_EXT,params.anisoSamples)}if(unit<0){var active=textureUnits[activeTexture];if(active){gl.bindTexture(active.target,active.texture)}else{this.unit=activeTexture}}},destroy:function(){check(this.texture,"must not double free texture");if(this.unit>=0){gl.activeTexture(GL_TEXTURE0+this.unit);activeTexture=this.unit;gl.bindTexture(this.target,null);textureUnits[this.unit]=null}if(this.cancelPending){this.cancelPending();this.cancelPending=null}clearPoll(this);gl.deleteTexture(this.texture);this.texture=null;this.unit=-1;this.bindCount=0;delete textureSet[this.id]}});function hookListeners(texture){var data=texture.data;var images=data.faces||[data.image];var pixels=[];images.forEach(function(image){if(image.pixels){pixels.push(image.pixels)}else if(image.mipmap){pixels.push.apply(pixels,image.mipmap)}});function refresh(){if(!data.width||!data.height){pixels.forEach(function(pixelData){if(pixelData.image){data.width=data.width||pixelData.image.naturalWidth;data.height=data.height||pixelData.image.naturalWidth}else if(pixelData.video){data.width=data.width||pixelData.video.width;data.height=data.height||pixelData.video.height}});checkDims(texture.target,data);pixels.forEach(function(pixelData){pixelData.width=pixelData.width||data.width>>pixelData.miplevel;pixelData.height=pixelData.height||data.height>>pixelData.miplevel})}texture.refresh()}pixels.forEach(function(pixelData){if(pixelData.image&&!pixelData.image.complete){pixelData.image.addEventListener("load",refresh)}else if(pixelData.video&&pixelData.readyState<1){pixelData.video.addEventListener("progress",refresh)}});function detachListeners(){pixels.forEach(function(pixelData){if(pixelData.image){pixelData.image.removeEventListener("load",refresh)}else if(pixelData.video){pixelData.video.removeEventListener("progress",refresh)}})}return detachListeners}function createTexture(options,target){var texture=new REGLTexture(target,gl.createTexture());textureSet[texture.id]=texture;var parse=target===GL_TEXTURE_2D?parseTexture2D:parseCube;function reglTexture(){var options;if(arguments.length===6){options=Array.prototype.slice.call(arguments)}else{options=arguments[0]||{}}if(texture.cancelPending){texture.cancelPending();texture.cancelPending=null}clearPoll(texture);var input=options||{};if(typeof input!=="object"){input={data:input}}var args=parse(input);checkDims(texture.target,args);var params=args.params;texture.data=args;if(params.needsListeners){texture.cancelPending=hookListeners(texture)}if(params.poll){texture.pollId=pollSet.length;pollSet.push(texture)}texture.refresh()}reglTexture(options);reglTexture._reglType="texture";reglTexture._texture=texture;reglTexture.destroy=function(){texture.destroy()};return reglTexture}function refreshTextures(){Object.keys(textureSet).forEach(function(texId){textureSet[texId].refresh()});for(var i=0;i<numTexUnits;++i){textureUnits[i]=null}activeTexture=0;gl.activeTexture(GL_TEXTURE0)}function destroyTextures(){for(var i=0;i<numTexUnits;++i){gl.activeTexture(GL_TEXTURE0+i);gl.bindTexture(GL_TEXTURE_2D,null);textureUnits[i]=null}gl.activeTexture(GL_TEXTURE0);activeTexture=0;Object.keys(textureSet).forEach(function(texId){textureSet[texId].destroy()})}function pollTextures(){for(var i=0;i<pollSet.length;++i){pollSet[i].refresh()}}return{create:createTexture,refresh:refreshTextures,clear:destroyTextures,poll:pollTextures,getTexture:function(wrapper){return null}}}},{"./check":3,"./is-typed-array":16,"./load-texture":18}],25:[function(_dereq_,module,exports){module.exports=function wrapUniformState(){var uniformState={};function defUniform(name){if(name in uniformState){return}uniformState[name]=[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]]}return{uniforms:uniformState,def:defUniform}}},{}],26:[function(_dereq_,module,exports){var check=_dereq_("./lib/check");var getContext=_dereq_("./lib/context");var wrapExtensions=_dereq_("./lib/extension");var wrapLimits=_dereq_("./lib/limits");var wrapBuffers=_dereq_("./lib/buffer");var wrapElements=_dereq_("./lib/elements");var wrapTextures=_dereq_("./lib/texture");var wrapFBOs=_dereq_("./lib/fbo");var wrapUniforms=_dereq_("./lib/uniform");var wrapAttributes=_dereq_("./lib/attribute");var wrapShaders=_dereq_("./lib/shader");var wrapDraw=_dereq_("./lib/draw");var wrapContext=_dereq_("./lib/state");var createCompiler=_dereq_("./lib/compile");var wrapRead=_dereq_("./lib/read");var dynamic=_dereq_("./lib/dynamic");var raf=_dereq_("./lib/raf");var clock=_dereq_("./lib/clock");var GL_COLOR_BUFFER_BIT=16384;var GL_DEPTH_BUFFER_BIT=256;var GL_STENCIL_BUFFER_BIT=1024;var GL_ARRAY_BUFFER=34962;var GL_TEXTURE_2D=3553;var GL_TEXTURE_CUBE_MAP=34067;var CONTEXT_LOST_EVENT="webglcontextlost";var CONTEXT_RESTORED_EVENT="webglcontextrestored";module.exports=function wrapREGL(){var args=getContext(Array.prototype.slice.call(arguments));var gl=args.gl;var options=args.options;var extensionState=wrapExtensions(gl);var limits=wrapLimits(gl,extensionState);var bufferState=wrapBuffers(gl);var elementState=wrapElements(gl,extensionState,bufferState);var uniformState=wrapUniforms();var attributeState=wrapAttributes(gl,extensionState,bufferState);var shaderState=wrapShaders(gl,extensionState,attributeState,uniformState,function(program){return compiler.draw(program)});var drawState=wrapDraw(gl,extensionState,bufferState);var glState=wrapContext(gl,shaderState);var textureState=wrapTextures(gl,extensionState,limits,poll,glState.viewport);var fboState=wrapFBOs(gl,extensionState,textureState);var frameState={count:0,start:clock(),dt:0,t:clock(),renderTime:0,width:gl.drawingBufferWidth,height:gl.drawingBufferHeight,pixelRatio:options.pixelRatio};var readPixels=wrapRead(gl,glState);var compiler=createCompiler(gl,extensionState,bufferState,elementState,textureState,fboState,glState,uniformState,attributeState,shaderState,drawState,frameState);var canvas=gl.canvas;var rafCallbacks=[];var activeRAF=0;function handleRAF(){activeRAF=raf.next(handleRAF);frameState.count+=1;if(frameState.width!==gl.drawingBufferWidth||frameState.height!==gl.drawingBufferHeight){frameState.width=gl.drawingBufferWidth;frameState.height=gl.drawingBufferHeight;glState.notifyViewportChanged()}var now=clock();frameState.dt=now-frameState.t;frameState.t=now;textureState.poll();for(var i=0;i<rafCallbacks.length;++i){var cb=rafCallbacks[i];cb(frameState.count,frameState.t,frameState.dt)}frameState.renderTime=clock()-now}function startRAF(){if(!activeRAF&&rafCallbacks.length>0){handleRAF()}}function stopRAF(){if(activeRAF){raf.cancel(handleRAF);activeRAF=0}}function handleContextLoss(event){stopRAF();event.preventDefault();if(options.onContextLost){options.onContextLost()}}function handleContextRestored(event){gl.getError();extensionState.refresh();bufferState.refresh();textureState.refresh();fboState.refresh();shaderState.refresh();glState.refresh();if(options.onContextRestored){options.onContextRestored()}handleRAF()}if(canvas){canvas.addEventListener(CONTEXT_LOST_EVENT,handleContextLoss,false);canvas.addEventListener(CONTEXT_RESTORED_EVENT,handleContextRestored,false)}function destroy(){stopRAF();if(canvas){canvas.removeEventListener(CONTEXT_LOST_EVENT,handleContextLoss);canvas.removeEventListener(CONTEXT_RESTORED_EVENT,handleContextRestored)}shaderState.clear();fboState.clear();textureState.clear();bufferState.clear();if(options.onDestroy){options.onDestroy()}}function compileProcedure(options){check(!!options,"invalid args to regl({...})");check.type(options,"object","invalid args to regl({...})");var hasDynamic=false;function flattenNestedOptions(options){var result=Object.assign({},options);delete result.uniforms;delete result.attributes;function merge(name){if(name in result){var child=result[name];delete result[name];Object.keys(child).forEach(function(prop){result[name+"."+prop]=child[prop]})}}merge("blend");merge("depth");merge("cull");merge("stencil");merge("polygonOffset");merge("scissor");merge("sample");return result}function separateDynamic(object){var staticItems={};var dynamicItems={};Object.keys(object).forEach(function(option){var value=object[option];if(dynamic.isDynamic(value)){hasDynamic=true;dynamicItems[option]=dynamic.unbox(value,option)}else{staticItems[option]=value}});return{dynamic:dynamicItems,"static":staticItems}}var uniforms=separateDynamic(options.uniforms||{});var attributes=separateDynamic(options.attributes||{});var opts=separateDynamic(flattenNestedOptions(options));var compiled=compiler.command(opts.static,uniforms.static,attributes.static,opts.dynamic,uniforms.dynamic,attributes.dynamic,hasDynamic);var draw=compiled.draw;var batch=compiled.batch;var scope=compiled.scope;var EMPTY_ARRAY=[];function reserve(count){while(EMPTY_ARRAY.length<count){EMPTY_ARRAY.push(null)}return EMPTY_ARRAY}function REGLCommand(args,body){if(typeof args==="number"){return batch(args|0,reserve(args|0))}else if(Array.isArray(args)){return batch(args.length,args)}else if(typeof args==="function"){return scope(null,args)}else if(typeof body==="function"){return scope(args,body)}return draw(args)}return REGLCommand}function poll(){glState.poll()}function clear(options){var clearFlags=0;glState.poll();var c=options.color;if(c){gl.clearColor(+c[0]||0,+c[1]||0,+c[2]||0,+c[3]||0);clearFlags|=GL_COLOR_BUFFER_BIT}if("depth"in options){gl.clearDepth(+options.depth);clearFlags|=GL_DEPTH_BUFFER_BIT}if("stencil"in options){gl.clearStencil(options.stencil|0);clearFlags|=GL_STENCIL_BUFFER_BIT}check(!!clearFlags,"called regl.clear with no buffer specified");gl.clear(clearFlags)}function frame(cb){rafCallbacks.push(cb);function cancel(){var index=rafCallbacks.find(function(item){return item===cb});if(index<0){return}rafCallbacks.splice(index,1);if(rafCallbacks.length<=0){stopRAF()}}startRAF();return{cancel:cancel}}return Object.assign(compileProcedure,{clear:clear,prop:dynamic.define,elements:function(options){return elementState.create(options)},buffer:function(options){return bufferState.create(options,GL_ARRAY_BUFFER)},texture:function(options){return textureState.create(options,GL_TEXTURE_2D)},cube:function(options){if(arguments.length===6){return textureState.create(Array.prototype.slice.call(arguments),GL_TEXTURE_CUBE_MAP)}else{return textureState.create(options,GL_TEXTURE_CUBE_MAP)}},frame:frame,
stats:frameState,limits:limits,read:readPixels,destroy:destroy})}},{"./lib/attribute":1,"./lib/buffer":2,"./lib/check":3,"./lib/clock":4,"./lib/compile":6,"./lib/context":10,"./lib/draw":11,"./lib/dynamic":12,"./lib/elements":13,"./lib/extension":14,"./lib/fbo":15,"./lib/limits":17,"./lib/raf":19,"./lib/read":20,"./lib/shader":21,"./lib/state":23,"./lib/texture":24,"./lib/uniform":25}]},{},[26])(26)});
